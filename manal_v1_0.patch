Index: tslint.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tslint.json	(revision cffe591a347345fd40ac9664e38c68aaf68ff20c)
+++ tslint.json	(date 1582066909622)
@@ -35,14 +35,14 @@
     ],
     "member-access": false,
     "no-arg": true,
-    "no-console": [
-      true,
-      "debug",
-      "log",
-      "time",
-      "timeEnd",
-      "trace"
-    ],
+    //"no-console": [
+    //  true,
+     // "debug",
+     // "log",
+     // "time",
+     //// "timeEnd",
+    //  "trace"
+   // ],
     "no-construct": true,
     "no-debugger": true,
     "no-duplicate-super": true,
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package.json	(revision cffe591a347345fd40ac9664e38c68aaf68ff20c)
+++ package.json	(date 1582277713248)
@@ -74,11 +74,12 @@
     "tslib": "^1.9.0",
     "typeface-exo": "0.0.22",
     "web-animations-js": "github:angular/web-animations-js#release_pr208",
-    "zone.js": "~0.9.1"
+    "zone.js": "~0.9.1",
+    "ngx-toastr": "latest"
   },
   "devDependencies": {
     "@angular-devkit/build-angular": "~0.800.2",
-    "@angular/cli": "^8.0.2",
+    "@angular/cli": "^8.3.25",
     "@angular/compiler-cli": "^8.0.0",
     "@angular/language-service": "8.0.0",
     "@compodoc/compodoc": "1.0.1",
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package-lock.json	(revision cffe591a347345fd40ac9664e38c68aaf68ff20c)
+++ package-lock.json	(date 1582277713858)
@@ -210,15 +210,49 @@
       }
     },
     "@angular-devkit/schematics": {
-      "version": "8.0.6",
-      "resolved": "https://registry.npmjs.org/@angular-devkit/schematics/-/schematics-8.0.6.tgz",
-      "integrity": "sha512-FGPcVKxNvtdFB0A6oHyxtWeugL83nW+kPATlAimgh1hu7TCP94dDpflCV9o/lgZlH817xTYXrhToXJaMZSnDPw==",
+      "version": "8.3.25",
+      "resolved": "https://registry.npmjs.org/@angular-devkit/schematics/-/schematics-8.3.25.tgz",
+      "integrity": "sha512-/p1MkfursfLy+JRGXlJGPEmX55lrFCsR/2khWAVXZcMaFR3QlR/b6/zvB8I2pHFfr0/XWnYTT/BsF7rJjO3RmA==",
       "dev": true,
       "requires": {
-        "@angular-devkit/core": "8.0.6",
+        "@angular-devkit/core": "8.3.25",
         "rxjs": "6.4.0"
       },
       "dependencies": {
+        "@angular-devkit/core": {
+          "version": "8.3.25",
+          "resolved": "https://registry.npmjs.org/@angular-devkit/core/-/core-8.3.25.tgz",
+          "integrity": "sha512-l7Gqy1tMrTpRmPVlovcFX8UA3mtXRlgO8kcSsbJ9MKRKNTCcxlfsWEYY5igyDBUVh6ADkgSIu0nuk31ZGTe0lw==",
+          "dev": true,
+          "requires": {
+            "ajv": "6.10.2",
+            "fast-json-stable-stringify": "2.0.0",
+            "magic-string": "0.25.3",
+            "rxjs": "6.4.0",
+            "source-map": "0.7.3"
+          }
+        },
+        "ajv": {
+          "version": "6.10.2",
+          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.2.tgz",
+          "integrity": "sha512-TXtUUEYHuaTEbLZWIKUr5pmBuhDLy+8KYtPYdcV8qC+pOZL+NKqYwvWSRrVXHn+ZmRRAu8vJTAznH7Oag6RVRw==",
+          "dev": true,
+          "requires": {
+            "fast-deep-equal": "^2.0.1",
+            "fast-json-stable-stringify": "^2.0.0",
+            "json-schema-traverse": "^0.4.1",
+            "uri-js": "^4.2.2"
+          }
+        },
+        "magic-string": {
+          "version": "0.25.3",
+          "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.3.tgz",
+          "integrity": "sha512-6QK0OpF/phMz0Q2AxILkX2mFhi7m+WMwTRg0LQKq/WBB0cDP4rYH3Wp4/d3OTXlrPLVJT/RFqj8tFeAR4nk8AA==",
+          "dev": true,
+          "requires": {
+            "sourcemap-codec": "^1.4.4"
+          }
+        },
         "rxjs": {
           "version": "6.4.0",
           "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.4.0.tgz",
@@ -227,6 +261,12 @@
           "requires": {
             "tslib": "^1.9.0"
           }
+        },
+        "source-map": {
+          "version": "0.7.3",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",
+          "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ==",
+          "dev": true
         }
       }
     },
@@ -248,30 +288,74 @@
       }
     },
     "@angular/cli": {
-      "version": "8.0.6",
-      "resolved": "https://registry.npmjs.org/@angular/cli/-/cli-8.0.6.tgz",
-      "integrity": "sha512-COBpeoXyLt8FiOhsmoEnDfQcm0aTdUSUHsH3zNkVTcyxpRzZVspTDGzxhK0UsCpddXS/MMjJiXph6SJ1el3qaQ==",
+      "version": "8.3.25",
+      "resolved": "https://registry.npmjs.org/@angular/cli/-/cli-8.3.25.tgz",
+      "integrity": "sha512-CPJI5nnbBvvyBUFwOHfRXy/KVwsiYlcbDAeIk1klcjQjbVFYZbnY0iAhNupy9j7rPQhb7jle5oslU3TLfbqOTQ==",
       "dev": true,
       "requires": {
-        "@angular-devkit/architect": "0.800.6",
-        "@angular-devkit/core": "8.0.6",
-        "@angular-devkit/schematics": "8.0.6",
-        "@schematics/angular": "8.0.6",
-        "@schematics/update": "0.800.6",
+        "@angular-devkit/architect": "0.803.25",
+        "@angular-devkit/core": "8.3.25",
+        "@angular-devkit/schematics": "8.3.25",
+        "@schematics/angular": "8.3.25",
+        "@schematics/update": "0.803.25",
         "@yarnpkg/lockfile": "1.1.0",
+        "ansi-colors": "4.1.1",
         "debug": "^4.1.1",
         "ini": "1.3.5",
-        "inquirer": "6.3.1",
+        "inquirer": "6.5.1",
         "npm-package-arg": "6.1.0",
-        "open": "6.2.0",
-        "pacote": "9.5.0",
-        "read-package-tree": "5.2.2",
-        "semver": "6.0.0",
+        "npm-pick-manifest": "3.0.2",
+        "open": "6.4.0",
+        "pacote": "9.5.5",
+        "read-package-tree": "5.3.1",
+        "rimraf": "3.0.0",
+        "semver": "6.3.0",
         "symbol-observable": "1.2.0",
         "universal-analytics": "^0.4.20",
         "uuid": "^3.3.2"
       },
       "dependencies": {
+        "@angular-devkit/architect": {
+          "version": "0.803.25",
+          "resolved": "https://registry.npmjs.org/@angular-devkit/architect/-/architect-0.803.25.tgz",
+          "integrity": "sha512-usV/zEncKCKQuF6AD3pRU6N5i5fbaAux/qZb+nbOz9/2G5jrXwe5sH+y3vxbgqB83e3LqusEQCTu7/tfg6LwZg==",
+          "dev": true,
+          "requires": {
+            "@angular-devkit/core": "8.3.25",
+            "rxjs": "6.4.0"
+          }
+        },
+        "@angular-devkit/core": {
+          "version": "8.3.25",
+          "resolved": "https://registry.npmjs.org/@angular-devkit/core/-/core-8.3.25.tgz",
+          "integrity": "sha512-l7Gqy1tMrTpRmPVlovcFX8UA3mtXRlgO8kcSsbJ9MKRKNTCcxlfsWEYY5igyDBUVh6ADkgSIu0nuk31ZGTe0lw==",
+          "dev": true,
+          "requires": {
+            "ajv": "6.10.2",
+            "fast-json-stable-stringify": "2.0.0",
+            "magic-string": "0.25.3",
+            "rxjs": "6.4.0",
+            "source-map": "0.7.3"
+          }
+        },
+        "ajv": {
+          "version": "6.10.2",
+          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.2.tgz",
+          "integrity": "sha512-TXtUUEYHuaTEbLZWIKUr5pmBuhDLy+8KYtPYdcV8qC+pOZL+NKqYwvWSRrVXHn+ZmRRAu8vJTAznH7Oag6RVRw==",
+          "dev": true,
+          "requires": {
+            "fast-deep-equal": "^2.0.1",
+            "fast-json-stable-stringify": "^2.0.0",
+            "json-schema-traverse": "^0.4.1",
+            "uri-js": "^4.2.2"
+          }
+        },
+        "ansi-colors": {
+          "version": "4.1.1",
+          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.1.tgz",
+          "integrity": "sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666/hhCGKN5t9QFjbJQKUU/g8MNbFDbvfrgKXvI1QpZplPOnwIo99lX/AAmA==",
+          "dev": true
+        },
         "debug": {
           "version": "4.1.1",
           "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",
@@ -281,16 +365,58 @@
             "ms": "^2.1.1"
           }
         },
+        "magic-string": {
+          "version": "0.25.3",
+          "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.3.tgz",
+          "integrity": "sha512-6QK0OpF/phMz0Q2AxILkX2mFhi7m+WMwTRg0LQKq/WBB0cDP4rYH3Wp4/d3OTXlrPLVJT/RFqj8tFeAR4nk8AA==",
+          "dev": true,
+          "requires": {
+            "sourcemap-codec": "^1.4.4"
+          }
+        },
         "ms": {
           "version": "2.1.2",
           "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
           "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
           "dev": true
         },
+        "open": {
+          "version": "6.4.0",
+          "resolved": "https://registry.npmjs.org/open/-/open-6.4.0.tgz",
+          "integrity": "sha512-IFenVPgF70fSm1keSd2iDBIDIBZkroLeuffXq+wKTzTJlBpesFWojV9lb8mzOfaAzM1sr7HQHuO0vtV0zYekGg==",
+          "dev": true,
+          "requires": {
+            "is-wsl": "^1.1.0"
+          }
+        },
+        "rimraf": {
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.0.tgz",
+          "integrity": "sha512-NDGVxTsjqfunkds7CqsOiEnxln4Bo7Nddl3XhS4pXg5OzwkLqJ971ZVAAnB+DDLnF76N+VnDEiBHaVV8I06SUg==",
+          "dev": true,
+          "requires": {
+            "glob": "^7.1.3"
+          }
+        },
+        "rxjs": {
+          "version": "6.4.0",
+          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.4.0.tgz",
+          "integrity": "sha512-Z9Yfa11F6B9Sg/BK9MnqnQ+aQYicPLtilXBp2yUtDt2JRCE0h26d33EnfO3ZxoNxG0T92OUucP3Ct7cpfkdFfw==",
+          "dev": true,
+          "requires": {
+            "tslib": "^1.9.0"
+          }
+        },
         "semver": {
-          "version": "6.0.0",
-          "resolved": "https://registry.npmjs.org/semver/-/semver-6.0.0.tgz",
-          "integrity": "sha512-0UewU+9rFapKFnlbirLi3byoOuhrSsli/z/ihNnvM24vgF+8sNBiI1LZPBSH9wJKUwaUbw+s3hToDLCXkrghrQ==",
+          "version": "6.3.0",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
+          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
+          "dev": true
+        },
+        "source-map": {
+          "version": "0.7.3",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",
+          "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ==",
           "dev": true
         }
       }
@@ -866,29 +992,24 @@
       "dev": true
     },
     "@nebular/auth": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/@nebular/auth/-/auth-4.1.0.tgz",
-      "integrity": "sha512-ClKY922f9sJGkJ0+66A/fYglHcHzSr9bgnBwz8EV8as83nuxYwXo7lIi4kHcE0VdY4bRAywqneSg/KusjD4+Og=="
-    },
-    "@nebular/bootstrap": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/@nebular/bootstrap/-/bootstrap-4.1.0.tgz",
-      "integrity": "sha512-zAwjKhZ8/s3nMmA/JEGpfU4X37hR+UARSK64bbqRpfkOowuKO2LXAweK2sw0y6fAXAUq5K977rBOzczZjqmS+g=="
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/@nebular/auth/-/auth-4.1.2.tgz",
+      "integrity": "sha512-fLCZgQwHgI3B8Zh4+y8R6n4WP+vyrrkDH9PkrNbAWU2eMUjOh4xobkGrFZRtu/XxMS/Apq5BKV2OxrLcEh4nEQ=="
     },
     "@nebular/eva-icons": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/@nebular/eva-icons/-/eva-icons-4.1.0.tgz",
-      "integrity": "sha512-ZN/vBjn6fZ//aQkj8nntZMRhyC6OzxES1MK8t64fQJmG0gNb9gUrgbQEJh9o3X1ZUYd6LZgerbZ5yLGCue8+wg=="
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/@nebular/eva-icons/-/eva-icons-4.1.2.tgz",
+      "integrity": "sha512-awIRdhtncfdJVsn1JqaZfDYM0OSeIl3PH+MQKDJ4sAw1ARAiAkfm9ia53XI/rDayhQS8rm4mK28xuXGXc/9DHw=="
     },
     "@nebular/security": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/@nebular/security/-/security-4.1.0.tgz",
-      "integrity": "sha512-S4u037/cmzMJo6faZE51B+cGlXimzM4irYSfMmkCr8yeuDt394urhBzTUDE7/dhW9AYo9jRAWW4i+V+wrnhOqw=="
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/@nebular/security/-/security-4.1.2.tgz",
+      "integrity": "sha512-MdG6UkCyeiKTyzdk8gOWn8tNuZhIQPW01142l/DowSeNKiu/+Zmj8FbkM+0c1IobhLKrS/TdoUP/3SODWP9S4g=="
     },
     "@nebular/theme": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/@nebular/theme/-/theme-4.1.0.tgz",
-      "integrity": "sha512-pfYR7vrqcsJ0TBLXzQhk2FQbC9FXeQ5RR/timCkByswY/W87IhN10onSlLgm/DPlVvZq0T0vDBrl50/sjtU2xQ==",
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/@nebular/theme/-/theme-4.1.2.tgz",
+      "integrity": "sha512-6V3Fk3dQTm9yJNe3wDh20ljZen8C9Btvmtuk/nQHdLOyWG7/Znkean1fgmjfEm/98rfgj01a6RksEVXYnfLcVQ==",
       "requires": {
         "intersection-observer": "0.5.0"
       }
@@ -918,31 +1039,116 @@
       }
     },
     "@schematics/angular": {
-      "version": "8.0.6",
-      "resolved": "https://registry.npmjs.org/@schematics/angular/-/angular-8.0.6.tgz",
-      "integrity": "sha512-F0/MrbvrJQJIjt0GwEkmf9PZUX0xQlCjlDcH6U7yBni0/+R5Gd5g3G0f12fsSa2iAwpwrLkKpiQluj29eFituQ==",
+      "version": "8.3.25",
+      "resolved": "https://registry.npmjs.org/@schematics/angular/-/angular-8.3.25.tgz",
+      "integrity": "sha512-/vEPtE+fvgsWPml/MVqzmlGPBujadPPNwaTuuj5Uz1aVcKeEYzLkbN8YQOpml4vxZHCF8RDwNdGiU4SZg63Jfg==",
       "dev": true,
       "requires": {
-        "@angular-devkit/core": "8.0.6",
-        "@angular-devkit/schematics": "8.0.6"
+        "@angular-devkit/core": "8.3.25",
+        "@angular-devkit/schematics": "8.3.25"
+      },
+      "dependencies": {
+        "@angular-devkit/core": {
+          "version": "8.3.25",
+          "resolved": "https://registry.npmjs.org/@angular-devkit/core/-/core-8.3.25.tgz",
+          "integrity": "sha512-l7Gqy1tMrTpRmPVlovcFX8UA3mtXRlgO8kcSsbJ9MKRKNTCcxlfsWEYY5igyDBUVh6ADkgSIu0nuk31ZGTe0lw==",
+          "dev": true,
+          "requires": {
+            "ajv": "6.10.2",
+            "fast-json-stable-stringify": "2.0.0",
+            "magic-string": "0.25.3",
+            "rxjs": "6.4.0",
+            "source-map": "0.7.3"
+          }
+        },
+        "ajv": {
+          "version": "6.10.2",
+          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.2.tgz",
+          "integrity": "sha512-TXtUUEYHuaTEbLZWIKUr5pmBuhDLy+8KYtPYdcV8qC+pOZL+NKqYwvWSRrVXHn+ZmRRAu8vJTAznH7Oag6RVRw==",
+          "dev": true,
+          "requires": {
+            "fast-deep-equal": "^2.0.1",
+            "fast-json-stable-stringify": "^2.0.0",
+            "json-schema-traverse": "^0.4.1",
+            "uri-js": "^4.2.2"
+          }
+        },
+        "magic-string": {
+          "version": "0.25.3",
+          "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.3.tgz",
+          "integrity": "sha512-6QK0OpF/phMz0Q2AxILkX2mFhi7m+WMwTRg0LQKq/WBB0cDP4rYH3Wp4/d3OTXlrPLVJT/RFqj8tFeAR4nk8AA==",
+          "dev": true,
+          "requires": {
+            "sourcemap-codec": "^1.4.4"
+          }
+        },
+        "rxjs": {
+          "version": "6.4.0",
+          "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.4.0.tgz",
+          "integrity": "sha512-Z9Yfa11F6B9Sg/BK9MnqnQ+aQYicPLtilXBp2yUtDt2JRCE0h26d33EnfO3ZxoNxG0T92OUucP3Ct7cpfkdFfw==",
+          "dev": true,
+          "requires": {
+            "tslib": "^1.9.0"
+          }
+        },
+        "source-map": {
+          "version": "0.7.3",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",
+          "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ==",
+          "dev": true
+        }
       }
     },
     "@schematics/update": {
-      "version": "0.800.6",
-      "resolved": "https://registry.npmjs.org/@schematics/update/-/update-0.800.6.tgz",
-      "integrity": "sha512-vrzGIJtMiwLWl96+aJXMYrPgPtktLRpY8ZiNnlLm3pMDmeg08uButRh/pQGt02HuO/apTNJ5g0bmG8K5wS4I5A==",
+      "version": "0.803.25",
+      "resolved": "https://registry.npmjs.org/@schematics/update/-/update-0.803.25.tgz",
+      "integrity": "sha512-VIlqhJsCStA3aO4llxZ7lAOvQUqppyZdrEO7f/ApIJmuofPQTkO5Hx21tnv0dyExwoqPCSIHzEu4Tmc0/TWM1A==",
       "dev": true,
       "requires": {
-        "@angular-devkit/core": "8.0.6",
-        "@angular-devkit/schematics": "8.0.6",
+        "@angular-devkit/core": "8.3.25",
+        "@angular-devkit/schematics": "8.3.25",
         "@yarnpkg/lockfile": "1.1.0",
         "ini": "1.3.5",
-        "pacote": "9.5.0",
+        "pacote": "9.5.5",
         "rxjs": "6.4.0",
-        "semver": "6.0.0",
+        "semver": "6.3.0",
         "semver-intersect": "1.4.0"
       },
       "dependencies": {
+        "@angular-devkit/core": {
+          "version": "8.3.25",
+          "resolved": "https://registry.npmjs.org/@angular-devkit/core/-/core-8.3.25.tgz",
+          "integrity": "sha512-l7Gqy1tMrTpRmPVlovcFX8UA3mtXRlgO8kcSsbJ9MKRKNTCcxlfsWEYY5igyDBUVh6ADkgSIu0nuk31ZGTe0lw==",
+          "dev": true,
+          "requires": {
+            "ajv": "6.10.2",
+            "fast-json-stable-stringify": "2.0.0",
+            "magic-string": "0.25.3",
+            "rxjs": "6.4.0",
+            "source-map": "0.7.3"
+          }
+        },
+        "ajv": {
+          "version": "6.10.2",
+          "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.2.tgz",
+          "integrity": "sha512-TXtUUEYHuaTEbLZWIKUr5pmBuhDLy+8KYtPYdcV8qC+pOZL+NKqYwvWSRrVXHn+ZmRRAu8vJTAznH7Oag6RVRw==",
+          "dev": true,
+          "requires": {
+            "fast-deep-equal": "^2.0.1",
+            "fast-json-stable-stringify": "^2.0.0",
+            "json-schema-traverse": "^0.4.1",
+            "uri-js": "^4.2.2"
+          }
+        },
+        "magic-string": {
+          "version": "0.25.3",
+          "resolved": "https://registry.npmjs.org/magic-string/-/magic-string-0.25.3.tgz",
+          "integrity": "sha512-6QK0OpF/phMz0Q2AxILkX2mFhi7m+WMwTRg0LQKq/WBB0cDP4rYH3Wp4/d3OTXlrPLVJT/RFqj8tFeAR4nk8AA==",
+          "dev": true,
+          "requires": {
+            "sourcemap-codec": "^1.4.4"
+          }
+        },
         "rxjs": {
           "version": "6.4.0",
           "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.4.0.tgz",
@@ -953,9 +1159,15 @@
           }
         },
         "semver": {
-          "version": "6.0.0",
-          "resolved": "https://registry.npmjs.org/semver/-/semver-6.0.0.tgz",
-          "integrity": "sha512-0UewU+9rFapKFnlbirLi3byoOuhrSsli/z/ihNnvM24vgF+8sNBiI1LZPBSH9wJKUwaUbw+s3hToDLCXkrghrQ==",
+          "version": "6.3.0",
+          "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.0.tgz",
+          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==",
+          "dev": true
+        },
+        "source-map": {
+          "version": "0.7.3",
+          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",
+          "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ==",
           "dev": true
         }
       }
@@ -1422,10 +1634,13 @@
       "dev": true
     },
     "ansi-escapes": {
-      "version": "3.2.0",
-      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",
-      "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ==",
-      "dev": true
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.0.tgz",
+      "integrity": "sha512-EiYhwo0v255HUL6eDyuLrXEkTi7WwVCLAw+SeOQ7M7qdun1z1pum4DEm/nuqIVbPvi9RPPc9k9LbyBv6H0DwVg==",
+      "dev": true,
+      "requires": {
+        "type-fest": "^0.8.1"
+      }
     },
     "ansi-gray": {
       "version": "0.1.1",
@@ -2582,9 +2797,9 @@
       "dev": true
     },
     "ckeditor": {
-      "version": "4.7.3",
-      "resolved": "https://registry.npmjs.org/ckeditor/-/ckeditor-4.7.3.tgz",
-      "integrity": "sha1-tIb7nrka+VMqCs+upKVTdJcCVNU="
+      "version": "4.11.0",
+      "resolved": "https://registry.npmjs.org/ckeditor/-/ckeditor-4.11.0.tgz",
+      "integrity": "sha512-ueuXXK5Tm11WavvY8Qw49/voAz11h4jCFcaVHQw/dvLkfCacujlQNofBA6BDQpKLxEvvzKQxLdyl6dmLH4yZYw=="
     },
     "class-utils": {
       "version": "0.3.6",
@@ -2632,12 +2847,12 @@
       }
     },
     "cli-cursor": {
-      "version": "2.1.0",
-      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",
-      "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-3.1.0.tgz",
+      "integrity": "sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==",
       "dev": true,
       "requires": {
-        "restore-cursor": "^2.0.0"
+        "restore-cursor": "^3.1.0"
       }
     },
     "cli-width": {
@@ -5528,9 +5743,9 @@
       }
     },
     "external-editor": {
-      "version": "3.0.3",
-      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.0.3.tgz",
-      "integrity": "sha512-bn71H9+qWoOQKyZDo25mOMVpSmXROAsTJVVVYzrrtol3d4y+AsKjf4Iwl2Q+IuT0kFSQ1qo166UuIwqYq7mGnA==",
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.1.0.tgz",
+      "integrity": "sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==",
       "dev": true,
       "requires": {
         "chardet": "^0.7.0",
@@ -5663,9 +5878,9 @@
       "dev": true
     },
     "figures": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",
-      "integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/figures/-/figures-3.2.0.tgz",
+      "integrity": "sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==",
       "dev": true,
       "requires": {
         "escape-string-regexp": "^1.0.5"
@@ -5930,12 +6145,12 @@
       }
     },
     "fs-minipass": {
-      "version": "1.2.6",
-      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.6.tgz",
-      "integrity": "sha512-crhvyXcMejjv3Z5d2Fa9sf5xLYVCF5O1c71QxbVnbLsmYMBEvDAftewesN/HhY03YRoA7zOMxjNGrF5svGaaeQ==",
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-1.2.7.tgz",
+      "integrity": "sha512-GWSSJGFy4e9GUeCcbIkED+bgAoFyj7XF1mV8rma3QW4NIqX9Kyx79N/PF61H5udOV3aY1IaMLs6pGbH71nlCTA==",
       "dev": true,
       "requires": {
-        "minipass": "^2.2.1"
+        "minipass": "^2.6.0"
       }
     },
     "fs-write-stream-atomic": {
@@ -7562,12 +7777,12 @@
       "dev": true
     },
     "https-proxy-agent": {
-      "version": "2.2.1",
-      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-2.2.1.tgz",
-      "integrity": "sha512-HPCTS1LW51bcyMYbxUIOO4HEOlQ1/1qRaFWcyxvwaqUS9TY88aoEuHUY33kuAh1YhVVaDQhLZsnPd+XNARWZlQ==",
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-2.2.4.tgz",
+      "integrity": "sha512-OmvfoQ53WLjtA9HeYP9RNrWMJzzAz1JGaSFr1nijg0PVR1JaD/xbJq1mdEIIlxGpXp9eSe/O2LgU9DJmTPd0Eg==",
       "dev": true,
       "requires": {
-        "agent-base": "^4.1.0",
+        "agent-base": "^4.3.0",
         "debug": "^3.1.0"
       },
       "dependencies": {
@@ -7644,9 +7859,9 @@
       "dev": true
     },
     "ignore-walk": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.1.tgz",
-      "integrity": "sha512-DTVlMx3IYPe0/JJcYP7Gxg7ttZZu3IInhuEhbchuqneY9wWe5Ojy2mXLBaQFUQmo0AW2r3qG7m1mg86js+gnlQ==",
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/ignore-walk/-/ignore-walk-3.0.3.tgz",
+      "integrity": "sha512-m7o6xuOaT1aqheYHKf8W6J5pYH85ZI9w077erOzLje3JsB1gkafkAhHHY19dqjulgIZHFm32Cp5uNZgcQqdJKw==",
       "dev": true,
       "requires": {
         "minimatch": "^3.0.4"
@@ -7744,6 +7959,12 @@
       "integrity": "sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10=",
       "dev": true
     },
+    "infer-owner": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/infer-owner/-/infer-owner-1.0.4.tgz",
+      "integrity": "sha512-IClj+Xz94+d7irH5qRyfJonOdfTzuDaifE6ZPWfx0N0+/ATZCbuTPq2prFl526urkQd90WyUKIh1DfBQ2hMz9A==",
+      "dev": true
+    },
     "inflight": {
       "version": "1.0.6",
       "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
@@ -7765,30 +7986,30 @@
       "dev": true
     },
     "inquirer": {
-      "version": "6.3.1",
-      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.3.1.tgz",
-      "integrity": "sha512-MmL624rfkFt4TG9y/Jvmt8vdmOo836U7Y0Hxr2aFk3RelZEGX4Igk0KabWrcaaZaTv9uzglOqWh1Vly+FAWAXA==",
+      "version": "6.5.1",
+      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.5.1.tgz",
+      "integrity": "sha512-uxNHBeQhRXIoHWTSNYUFhQVrHYFThIt6IVo2fFmSe8aBwdR3/w6b58hJpiL/fMukFkvGzjg+hSxFtwvVmKZmXw==",
       "dev": true,
       "requires": {
-        "ansi-escapes": "^3.2.0",
+        "ansi-escapes": "^4.2.1",
         "chalk": "^2.4.2",
-        "cli-cursor": "^2.1.0",
+        "cli-cursor": "^3.1.0",
         "cli-width": "^2.0.0",
         "external-editor": "^3.0.3",
-        "figures": "^2.0.0",
-        "lodash": "^4.17.11",
-        "mute-stream": "0.0.7",
+        "figures": "^3.0.0",
+        "lodash": "^4.17.15",
+        "mute-stream": "0.0.8",
         "run-async": "^2.2.0",
         "rxjs": "^6.4.0",
-        "string-width": "^2.1.0",
+        "string-width": "^4.1.0",
         "strip-ansi": "^5.1.0",
         "through": "^2.3.6"
       },
       "dependencies": {
         "ansi-regex": {
-          "version": "3.0.0",
-          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",
-          "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=",
+          "version": "5.0.0",
+          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz",
+          "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==",
           "dev": true
         },
         "ansi-styles": {
@@ -7826,29 +8047,42 @@
           "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",
           "dev": true
         },
+        "emoji-regex": {
+          "version": "8.0.0",
+          "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
+          "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
+          "dev": true
+        },
         "is-fullwidth-code-point": {
-          "version": "2.0.0",
-          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",
-          "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",
+          "version": "3.0.0",
+          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
+          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
+          "dev": true
+        },
+        "lodash": {
+          "version": "4.17.15",
+          "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.15.tgz",
+          "integrity": "sha512-8xOcRHvCjnocdS5cpwXQXVzmmh5e5+saE2QGoeQmbKmRS6J3VQppPOIt0MnmE+4xlZoumy0GPG0D0MVIQbNA1A==",
           "dev": true
         },
         "string-width": {
-          "version": "2.1.1",
-          "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",
-          "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",
+          "version": "4.2.0",
+          "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.0.tgz",
+          "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==",
           "dev": true,
           "requires": {
-            "is-fullwidth-code-point": "^2.0.0",
-            "strip-ansi": "^4.0.0"
+            "emoji-regex": "^8.0.0",
+            "is-fullwidth-code-point": "^3.0.0",
+            "strip-ansi": "^6.0.0"
           },
           "dependencies": {
             "strip-ansi": {
-              "version": "4.0.0",
-              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",
-              "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",
+              "version": "6.0.0",
+              "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz",
+              "integrity": "sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==",
               "dev": true,
               "requires": {
-                "ansi-regex": "^3.0.0"
+                "ansi-regex": "^5.0.0"
               }
             }
           }
@@ -9467,16 +9701,16 @@
       "dev": true
     },
     "make-fetch-happen": {
-      "version": "4.0.2",
-      "resolved": "https://registry.npmjs.org/make-fetch-happen/-/make-fetch-happen-4.0.2.tgz",
-      "integrity": "sha512-YMJrAjHSb/BordlsDEcVcPyTbiJKkzqMf48N8dAJZT9Zjctrkb6Yg4TY9Sq2AwSIQJFn5qBBKVTYt3vP5FMIHA==",
+      "version": "5.0.2",
+      "resolved": "https://registry.npmjs.org/make-fetch-happen/-/make-fetch-happen-5.0.2.tgz",
+      "integrity": "sha512-07JHC0r1ykIoruKO8ifMXu+xEU8qOXDFETylktdug6vJDACnP+HKevOu3PXyNPzFyTSlz8vrBYlBO1JZRe8Cag==",
       "dev": true,
       "requires": {
         "agentkeepalive": "^3.4.1",
-        "cacache": "^11.3.3",
+        "cacache": "^12.0.0",
         "http-cache-semantics": "^3.8.1",
         "http-proxy-agent": "^2.1.0",
-        "https-proxy-agent": "^2.2.1",
+        "https-proxy-agent": "^2.2.3",
         "lru-cache": "^5.1.1",
         "mississippi": "^3.0.0",
         "node-fetch-npm": "^2.0.2",
@@ -9485,6 +9719,29 @@
         "ssri": "^6.0.0"
       },
       "dependencies": {
+        "cacache": {
+          "version": "12.0.3",
+          "resolved": "https://registry.npmjs.org/cacache/-/cacache-12.0.3.tgz",
+          "integrity": "sha512-kqdmfXEGFepesTuROHMs3MpFLWrPkSSpRqOw80RCflZXy/khxaArvFrQ7uJxSUduzAufc6G0g1VUCOZXxWavPw==",
+          "dev": true,
+          "requires": {
+            "bluebird": "^3.5.5",
+            "chownr": "^1.1.1",
+            "figgy-pudding": "^3.5.1",
+            "glob": "^7.1.4",
+            "graceful-fs": "^4.1.15",
+            "infer-owner": "^1.0.3",
+            "lru-cache": "^5.1.1",
+            "mississippi": "^3.0.0",
+            "mkdirp": "^0.5.1",
+            "move-concurrently": "^1.0.1",
+            "promise-inflight": "^1.0.1",
+            "rimraf": "^2.6.3",
+            "ssri": "^6.0.1",
+            "unique-filename": "^1.1.1",
+            "y18n": "^4.0.0"
+          }
+        },
         "lru-cache": {
           "version": "5.1.1",
           "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
@@ -9494,10 +9751,25 @@
             "yallist": "^3.0.2"
           }
         },
+        "rimraf": {
+          "version": "2.7.1",
+          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
+          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
+          "dev": true,
+          "requires": {
+            "glob": "^7.1.3"
+          }
+        },
+        "y18n": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.0.tgz",
+          "integrity": "sha512-r9S/ZyXu/Xu9q1tYlpsLIsa3EeLXXk0VwlxqTcFRfg9EhMW+17kbt9G0NrgCmhGb5vT2hyhJZLfDGx+7+5Uj/w==",
+          "dev": true
+        },
         "yallist": {
-          "version": "3.0.3",
-          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.0.3.tgz",
-          "integrity": "sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A==",
+          "version": "3.1.1",
+          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
           "dev": true
         }
       }
@@ -9732,9 +10004,9 @@
       }
     },
     "minipass": {
-      "version": "2.3.5",
-      "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.3.5.tgz",
-      "integrity": "sha512-Gi1W4k059gyRbyVUZQ4mEqLm0YIUiGYfvxhF6SIlk3ui1WVxMTGfGdQ2SInh3PDrRTVvPKgULkpJtT4RH10+VA==",
+      "version": "2.9.0",
+      "resolved": "https://registry.npmjs.org/minipass/-/minipass-2.9.0.tgz",
+      "integrity": "sha512-wxfUjg9WebH+CUDX/CdbRlh5SmfZiy/hpkxaRI16Y9W56Pa75sWgd/rvFilSgrauD9NyFymP/+JFV3KwzIsJeg==",
       "dev": true,
       "requires": {
         "safe-buffer": "^5.1.2",
@@ -9742,20 +10014,20 @@
       },
       "dependencies": {
         "yallist": {
-          "version": "3.0.3",
-          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.0.3.tgz",
-          "integrity": "sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A==",
+          "version": "3.1.1",
+          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
           "dev": true
         }
       }
     },
     "minizlib": {
-      "version": "1.2.1",
-      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-1.2.1.tgz",
-      "integrity": "sha512-7+4oTUOWKg7AuL3vloEWekXY2/D20cevzsrNT2kGWm+39J9hGTCBv8VI5Pm5lXZ/o3/mdR4f8rflAPhnQb8mPA==",
+      "version": "1.3.3",
+      "resolved": "https://registry.npmjs.org/minizlib/-/minizlib-1.3.3.tgz",
+      "integrity": "sha512-6ZYMOEnmVsdCeTJVE0W9ZD+pVnE8h9Hma/iOwwRDsdQoePpoX56/8B6z3P9VNwppJuBKNRuFDRNRqRWexT9G9Q==",
       "dev": true,
       "requires": {
-        "minipass": "^2.2.1"
+        "minipass": "^2.9.0"
       }
     },
     "mississippi": {
@@ -9931,9 +10203,9 @@
       }
     },
     "mute-stream": {
-      "version": "0.0.7",
-      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",
-      "integrity": "sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s=",
+      "version": "0.0.8",
+      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.8.tgz",
+      "integrity": "sha512-nnbWWOkoWyUsTjKrhgD0dcz22mdkSnpYqbEjIm2nhwhuxlSkpywJmBo8h0ZqJdkp73mb90SssHkN4rsRaBAfAA==",
       "dev": true
     },
     "nan": {
@@ -10186,9 +10458,18 @@
       "integrity": "sha1-IhiMJwfJEfs608GqwGd/9oZhvqg="
     },
     "npm-bundled": {
-      "version": "1.0.6",
-      "resolved": "https://registry.npmjs.org/npm-bundled/-/npm-bundled-1.0.6.tgz",
-      "integrity": "sha512-8/JCaftHwbd//k6y2rEWp6k1wxVfpFzB6t1p825+cUb7Ym2XQfhwIC5KwhrvzZRJu+LtDE585zVaS32+CGtf0g==",
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/npm-bundled/-/npm-bundled-1.1.1.tgz",
+      "integrity": "sha512-gqkfgGePhTpAEgUsGEgcq1rqPXA+tv/aVBlgEzfXwA1yiUJF7xtEt3CtVwOjNYQOVknDk0F20w58Fnm3EtG0fA==",
+      "dev": true,
+      "requires": {
+        "npm-normalize-package-bin": "^1.0.1"
+      }
+    },
+    "npm-normalize-package-bin": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/npm-normalize-package-bin/-/npm-normalize-package-bin-1.0.1.tgz",
+      "integrity": "sha512-EPfafl6JL5/rU+ot6P3gRSCpPDW5VmIzX959Ob1+ySFUuuYHWHekXpwdUZcKP5C+DS4GEtdJluwBjnsNDl+fSA==",
       "dev": true
     },
     "npm-package-arg": {
@@ -10204,19 +10485,20 @@
       }
     },
     "npm-packlist": {
-      "version": "1.4.4",
-      "resolved": "https://registry.npmjs.org/npm-packlist/-/npm-packlist-1.4.4.tgz",
-      "integrity": "sha512-zTLo8UcVYtDU3gdeaFu2Xu0n0EvelfHDGuqtNIn5RO7yQj4H1TqNdBc/yZjxnWA0PVB8D3Woyp0i5B43JwQ6Vw==",
+      "version": "1.4.8",
+      "resolved": "https://registry.npmjs.org/npm-packlist/-/npm-packlist-1.4.8.tgz",
+      "integrity": "sha512-5+AZgwru5IevF5ZdnFglB5wNlHG1AOOuw28WhUq8/8emhBmLv6jX5by4WJCh7lW0uSYZYS6DXqIsyZVIXRZU9A==",
       "dev": true,
       "requires": {
         "ignore-walk": "^3.0.1",
-        "npm-bundled": "^1.0.1"
+        "npm-bundled": "^1.0.1",
+        "npm-normalize-package-bin": "^1.0.1"
       }
     },
     "npm-pick-manifest": {
-      "version": "2.2.3",
-      "resolved": "https://registry.npmjs.org/npm-pick-manifest/-/npm-pick-manifest-2.2.3.tgz",
-      "integrity": "sha512-+IluBC5K201+gRU85vFlUwX3PFShZAbAgDNp2ewJdWMVSppdo/Zih0ul2Ecky/X7b51J7LrrUAP+XOmOCvYZqA==",
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/npm-pick-manifest/-/npm-pick-manifest-3.0.2.tgz",
+      "integrity": "sha512-wNprTNg+X5nf+tDi+hbjdHhM4bX+mKqv6XmPh7B5eG+QY9VARfQPfCEH013H5GqfNj6ee8Ij2fg8yk0mzps1Vw==",
       "dev": true,
       "requires": {
         "figgy-pudding": "^3.5.1",
@@ -10225,17 +10507,18 @@
       }
     },
     "npm-registry-fetch": {
-      "version": "3.9.1",
-      "resolved": "https://registry.npmjs.org/npm-registry-fetch/-/npm-registry-fetch-3.9.1.tgz",
-      "integrity": "sha512-VQCEZlydXw4AwLROAXWUR7QDfe2Y8Id/vpAgp6TI1/H78a4SiQ1kQrKZALm5/zxM5n4HIi+aYb+idUAV/RuY0Q==",
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/npm-registry-fetch/-/npm-registry-fetch-4.0.3.tgz",
+      "integrity": "sha512-WGvUx0lkKFhu9MbiGFuT9nG2NpfQ+4dCJwRwwtK2HK5izJEvwDxMeUyqbuMS7N/OkpVCqDorV6rO5E4V9F8lJw==",
       "dev": true,
       "requires": {
         "JSONStream": "^1.3.4",
         "bluebird": "^3.5.1",
         "figgy-pudding": "^3.4.1",
         "lru-cache": "^5.1.1",
-        "make-fetch-happen": "^4.0.2",
-        "npm-package-arg": "^6.1.0"
+        "make-fetch-happen": "^5.0.0",
+        "npm-package-arg": "^6.1.0",
+        "safe-buffer": "^5.2.0"
       },
       "dependencies": {
         "lru-cache": {
@@ -10247,10 +10530,16 @@
             "yallist": "^3.0.2"
           }
         },
+        "safe-buffer": {
+          "version": "5.2.0",
+          "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.0.tgz",
+          "integrity": "sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg==",
+          "dev": true
+        },
         "yallist": {
-          "version": "3.0.3",
-          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.0.3.tgz",
-          "integrity": "sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A==",
+          "version": "3.1.1",
+          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
           "dev": true
         }
       }
@@ -10414,6 +10703,12 @@
         }
       }
     },
+    "object-inspect": {
+      "version": "1.7.0",
+      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.7.0.tgz",
+      "integrity": "sha512-a7pEHdh1xKIAgTySUGgLMx/xwDZskN1Ud6egYYN3EdRW4ZMPNEDUTF+hwy2LUC+Bl+SyLXANnwz/jyh/qutKUw==",
+      "dev": true
+    },
     "object-keys": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
@@ -10429,6 +10724,81 @@
         "isobject": "^3.0.0"
       }
     },
+    "object.assign": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.0.tgz",
+      "integrity": "sha512-exHJeq6kBKj58mqGyTQ9DFvrZC/eR6OwxzoM9YRoGBqrXYonaFyGiFMuc9VZrXf7DarreEwMpurG3dd+CNyW5w==",
+      "dev": true,
+      "requires": {
+        "define-properties": "^1.1.2",
+        "function-bind": "^1.1.1",
+        "has-symbols": "^1.0.0",
+        "object-keys": "^1.0.11"
+      }
+    },
+    "object.getownpropertydescriptors": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/object.getownpropertydescriptors/-/object.getownpropertydescriptors-2.1.0.tgz",
+      "integrity": "sha512-Z53Oah9A3TdLoblT7VKJaTDdXdT+lQO+cNpKVnya5JDe9uLvzu1YyY1yFDFrcxrlRgWrEFH0jJtD/IbuwjcEVg==",
+      "dev": true,
+      "requires": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.0-next.1"
+      },
+      "dependencies": {
+        "es-abstract": {
+          "version": "1.17.4",
+          "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.17.4.tgz",
+          "integrity": "sha512-Ae3um/gb8F0mui/jPL+QiqmglkUsaQf7FwBEHYIFkztkneosu9imhqHpBzQ3h1vit8t5iQ74t6PEVvphBZiuiQ==",
+          "dev": true,
+          "requires": {
+            "es-to-primitive": "^1.2.1",
+            "function-bind": "^1.1.1",
+            "has": "^1.0.3",
+            "has-symbols": "^1.0.1",
+            "is-callable": "^1.1.5",
+            "is-regex": "^1.0.5",
+            "object-inspect": "^1.7.0",
+            "object-keys": "^1.1.1",
+            "object.assign": "^4.1.0",
+            "string.prototype.trimleft": "^2.1.1",
+            "string.prototype.trimright": "^2.1.1"
+          }
+        },
+        "es-to-primitive": {
+          "version": "1.2.1",
+          "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
+          "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
+          "dev": true,
+          "requires": {
+            "is-callable": "^1.1.4",
+            "is-date-object": "^1.0.1",
+            "is-symbol": "^1.0.2"
+          }
+        },
+        "has-symbols": {
+          "version": "1.0.1",
+          "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.1.tgz",
+          "integrity": "sha512-PLcsoqu++dmEIZB+6totNFKq/7Do+Z0u4oT0zKOJNl3lYK6vGwwu2hjHs+68OEZbTjiUE9bgOABXbP/GvrS0Kg==",
+          "dev": true
+        },
+        "is-callable": {
+          "version": "1.1.5",
+          "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.1.5.tgz",
+          "integrity": "sha512-ESKv5sMCJB2jnHTWZ3O5itG+O128Hsus4K4Qh1h2/cgn2vbgnLSVqfV46AeJA9D5EeeLa9w81KUXMtn34zhX+Q==",
+          "dev": true
+        },
+        "is-regex": {
+          "version": "1.0.5",
+          "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.0.5.tgz",
+          "integrity": "sha512-vlKW17SNq44owv5AQR3Cq0bQPEb8+kF3UKZ2fiZNOWtztYE5i0CzCZxFDwO58qAOWtxdBRVO/V5Qin1wjCqFYQ==",
+          "dev": true,
+          "requires": {
+            "has": "^1.0.3"
+          }
+        }
+      }
+    },
     "object.omit": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.1.tgz",
@@ -10495,20 +10865,12 @@
       "dev": true
     },
     "onetime": {
-      "version": "2.0.1",
-      "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",
-      "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",
+      "version": "5.1.0",
+      "resolved": "https://registry.npmjs.org/onetime/-/onetime-5.1.0.tgz",
+      "integrity": "sha512-5NcSkPHhwTVFIQN+TUqXoS5+dlElHXdpAWu9I0HP20YOtIi+aZ0Ct82jdlILDxjLEAWwvm+qj1m6aEtsDVmm6Q==",
       "dev": true,
       "requires": {
-        "mimic-fn": "^1.0.0"
-      },
-      "dependencies": {
-        "mimic-fn": {
-          "version": "1.2.0",
-          "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",
-          "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ==",
-          "dev": true
-        }
+        "mimic-fn": "^2.1.0"
       }
     },
     "open": {
@@ -10659,18 +11021,19 @@
       "integrity": "sha1-Zzpxf4M8y09DFVMbde5HiDdmAPc="
     },
     "pacote": {
-      "version": "9.5.0",
-      "resolved": "https://registry.npmjs.org/pacote/-/pacote-9.5.0.tgz",
-      "integrity": "sha512-aUplXozRbzhaJO48FaaeClmN+2Mwt741MC6M3bevIGZwdCaP7frXzbUOfOWa91FPHoLITzG0hYaKY363lxO3bg==",
+      "version": "9.5.5",
+      "resolved": "https://registry.npmjs.org/pacote/-/pacote-9.5.5.tgz",
+      "integrity": "sha512-jAEP+Nqj4kyMWyNpfTU/Whx1jA7jEc5cCOlurm0/0oL+v8TAp1QSsK83N7bYe+2bEdFzMAtPG5TBebjzzGV0cA==",
       "dev": true,
       "requires": {
         "bluebird": "^3.5.3",
-        "cacache": "^11.3.2",
+        "cacache": "^12.0.2",
         "figgy-pudding": "^3.5.1",
         "get-stream": "^4.1.0",
         "glob": "^7.1.3",
+        "infer-owner": "^1.0.4",
         "lru-cache": "^5.1.1",
-        "make-fetch-happen": "^4.0.1",
+        "make-fetch-happen": "^5.0.0",
         "minimatch": "^3.0.4",
         "minipass": "^2.3.5",
         "mississippi": "^3.0.0",
@@ -10679,7 +11042,7 @@
         "npm-package-arg": "^6.1.0",
         "npm-packlist": "^1.1.12",
         "npm-pick-manifest": "^2.2.3",
-        "npm-registry-fetch": "^3.8.0",
+        "npm-registry-fetch": "^4.0.0",
         "osenv": "^0.1.5",
         "promise-inflight": "^1.0.1",
         "promise-retry": "^1.1.1",
@@ -10693,6 +11056,29 @@
         "which": "^1.3.1"
       },
       "dependencies": {
+        "cacache": {
+          "version": "12.0.3",
+          "resolved": "https://registry.npmjs.org/cacache/-/cacache-12.0.3.tgz",
+          "integrity": "sha512-kqdmfXEGFepesTuROHMs3MpFLWrPkSSpRqOw80RCflZXy/khxaArvFrQ7uJxSUduzAufc6G0g1VUCOZXxWavPw==",
+          "dev": true,
+          "requires": {
+            "bluebird": "^3.5.5",
+            "chownr": "^1.1.1",
+            "figgy-pudding": "^3.5.1",
+            "glob": "^7.1.4",
+            "graceful-fs": "^4.1.15",
+            "infer-owner": "^1.0.3",
+            "lru-cache": "^5.1.1",
+            "mississippi": "^3.0.0",
+            "mkdirp": "^0.5.1",
+            "move-concurrently": "^1.0.1",
+            "promise-inflight": "^1.0.1",
+            "rimraf": "^2.6.3",
+            "ssri": "^6.0.1",
+            "unique-filename": "^1.1.1",
+            "y18n": "^4.0.0"
+          }
+        },
         "lru-cache": {
           "version": "5.1.1",
           "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
@@ -10702,34 +11088,51 @@
             "yallist": "^3.0.2"
           }
         },
+        "npm-pick-manifest": {
+          "version": "2.2.3",
+          "resolved": "https://registry.npmjs.org/npm-pick-manifest/-/npm-pick-manifest-2.2.3.tgz",
+          "integrity": "sha512-+IluBC5K201+gRU85vFlUwX3PFShZAbAgDNp2ewJdWMVSppdo/Zih0ul2Ecky/X7b51J7LrrUAP+XOmOCvYZqA==",
+          "dev": true,
+          "requires": {
+            "figgy-pudding": "^3.5.1",
+            "npm-package-arg": "^6.0.0",
+            "semver": "^5.4.1"
+          }
+        },
         "rimraf": {
-          "version": "2.6.3",
-          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz",
-          "integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",
+          "version": "2.7.1",
+          "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.7.1.tgz",
+          "integrity": "sha512-uWjbaKIK3T1OSVptzX7Nl6PvQ3qAGtKEtVRjRuazjfL3Bx5eI409VZSqgND+4UNnmzLVdPj9FqFJNPqBZFve4w==",
           "dev": true,
           "requires": {
             "glob": "^7.1.3"
           }
         },
         "tar": {
-          "version": "4.4.10",
-          "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.10.tgz",
-          "integrity": "sha512-g2SVs5QIxvo6OLp0GudTqEf05maawKUxXru104iaayWA09551tFCTI8f1Asb4lPfkBr91k07iL4c11XO3/b0tA==",
+          "version": "4.4.13",
+          "resolved": "https://registry.npmjs.org/tar/-/tar-4.4.13.tgz",
+          "integrity": "sha512-w2VwSrBoHa5BsSyH+KxEqeQBAllHhccyMFVHtGtdMpF4W7IRWfZjFiQceJPChOeTsSDVUpER2T8FA93pr0L+QA==",
           "dev": true,
           "requires": {
             "chownr": "^1.1.1",
             "fs-minipass": "^1.2.5",
-            "minipass": "^2.3.5",
+            "minipass": "^2.8.6",
             "minizlib": "^1.2.1",
             "mkdirp": "^0.5.0",
             "safe-buffer": "^5.1.2",
             "yallist": "^3.0.3"
           }
         },
+        "y18n": {
+          "version": "4.0.0",
+          "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.0.tgz",
+          "integrity": "sha512-r9S/ZyXu/Xu9q1tYlpsLIsa3EeLXXk0VwlxqTcFRfg9EhMW+17kbt9G0NrgCmhGb5vT2hyhJZLfDGx+7+5Uj/w==",
+          "dev": true
+        },
         "yallist": {
-          "version": "3.0.3",
-          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.0.3.tgz",
-          "integrity": "sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A==",
+          "version": "3.1.1",
+          "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+          "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
           "dev": true
         }
       }
@@ -11759,29 +12162,27 @@
       }
     },
     "read-package-json": {
-      "version": "2.0.13",
-      "resolved": "https://registry.npmjs.org/read-package-json/-/read-package-json-2.0.13.tgz",
-      "integrity": "sha512-/1dZ7TRZvGrYqE0UAfN6qQb5GYBsNcqS1C0tNK601CFOJmtHI7NIGXwetEPU/OtoFHZL3hDxm4rolFFVE9Bnmg==",
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/read-package-json/-/read-package-json-2.1.1.tgz",
+      "integrity": "sha512-dAiqGtVc/q5doFz6096CcnXhpYk0ZN8dEKVkGLU0CsASt8SrgF6SF7OTKAYubfvFhWaqofl+Y8HK19GR8jwW+A==",
       "dev": true,
       "requires": {
         "glob": "^7.1.1",
         "graceful-fs": "^4.1.2",
         "json-parse-better-errors": "^1.0.1",
         "normalize-package-data": "^2.0.0",
-        "slash": "^1.0.0"
+        "npm-normalize-package-bin": "^1.0.0"
       }
     },
     "read-package-tree": {
-      "version": "5.2.2",
-      "resolved": "https://registry.npmjs.org/read-package-tree/-/read-package-tree-5.2.2.tgz",
-      "integrity": "sha512-rW3XWUUkhdKmN2JKB4FL563YAgtINifso5KShykufR03nJ5loGFlkUMe1g/yxmqX073SoYYTsgXu7XdDinKZuA==",
+      "version": "5.3.1",
+      "resolved": "https://registry.npmjs.org/read-package-tree/-/read-package-tree-5.3.1.tgz",
+      "integrity": "sha512-mLUDsD5JVtlZxjSlPPx1RETkNjjvQYuweKwNVt1Sn8kP5Jh44pvYuUHCp6xSVDZWbNxVxG5lyZJ921aJH61sTw==",
       "dev": true,
       "requires": {
-        "debuglog": "^1.0.1",
-        "dezalgo": "^1.0.0",
-        "once": "^1.3.0",
         "read-package-json": "^2.0.0",
-        "readdir-scoped-modules": "^1.0.0"
+        "readdir-scoped-modules": "^1.0.0",
+        "util-promisify": "^2.1.0"
       }
     },
     "read-pkg": {
@@ -12040,12 +12441,12 @@
       "dev": true
     },
     "restore-cursor": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",
-      "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-3.1.0.tgz",
+      "integrity": "sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==",
       "dev": true,
       "requires": {
-        "onetime": "^2.0.0",
+        "onetime": "^5.1.0",
         "signal-exit": "^3.0.2"
       }
     },
@@ -12573,9 +12974,9 @@
       }
     },
     "smart-buffer": {
-      "version": "4.0.2",
-      "resolved": "https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.0.2.tgz",
-      "integrity": "sha512-JDhEpTKzXusOqXZ0BUIdH+CjFdO/CR3tLlf5CN34IypI+xMmXW1uB16OOY8z3cICbJlDAVJzNbwBhNO0wt9OAw==",
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/smart-buffer/-/smart-buffer-4.1.0.tgz",
+      "integrity": "sha512-iVICrxOzCynf/SNaBQCw34eM9jROU/s5rzIhpOvzhzuYHfJR/DhZfDkXiZSgKXfgv26HT3Yni3AV/DGw0cGnnw==",
       "dev": true
     },
     "snapdragon": {
@@ -12901,13 +13302,13 @@
       }
     },
     "socks": {
-      "version": "2.3.2",
-      "resolved": "https://registry.npmjs.org/socks/-/socks-2.3.2.tgz",
-      "integrity": "sha512-pCpjxQgOByDHLlNqlnh/mNSAxIUkyBBuwwhTcV+enZGbDaClPvHdvm6uvOwZfFJkam7cGhBNbb4JxiP8UZkRvQ==",
+      "version": "2.3.3",
+      "resolved": "https://registry.npmjs.org/socks/-/socks-2.3.3.tgz",
+      "integrity": "sha512-o5t52PCNtVdiOvzMry7wU4aOqYWL0PeCXRWBEiJow4/i/wr+wpsJQ9awEu1EonLIqsfGd5qSgDdxEOvCdmBEpA==",
       "dev": true,
       "requires": {
-        "ip": "^1.1.5",
-        "smart-buffer": "4.0.2"
+        "ip": "1.1.5",
+        "smart-buffer": "^4.1.0"
       }
     },
     "socks-proxy-agent": {
@@ -13358,6 +13759,26 @@
         "function-bind": "^1.0.2"
       }
     },
+    "string.prototype.trimleft": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimleft/-/string.prototype.trimleft-2.1.1.tgz",
+      "integrity": "sha512-iu2AGd3PuP5Rp7x2kEZCrB2Nf41ehzh+goo8TV7z8/XDBbsvc6HQIlUl9RjkZ4oyrW1XM5UwlGl1oVEaDjg6Ag==",
+      "dev": true,
+      "requires": {
+        "define-properties": "^1.1.3",
+        "function-bind": "^1.1.1"
+      }
+    },
+    "string.prototype.trimright": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimright/-/string.prototype.trimright-2.1.1.tgz",
+      "integrity": "sha512-qFvWL3/+QIgZXVmJBfpHmxLB7xsUXz6HsUmP8+5dRaC3Q7oKUv9Vo6aMCRZC1smrtyECFsIT30PqBJ1gTjAs+g==",
+      "dev": true,
+      "requires": {
+        "define-properties": "^1.1.3",
+        "function-bind": "^1.1.1"
+      }
+    },
     "string_decoder": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
@@ -14553,6 +14974,12 @@
       "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
       "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
     },
+    "type-fest": {
+      "version": "0.8.1",
+      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz",
+      "integrity": "sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==",
+      "dev": true
+    },
     "type-is": {
       "version": "1.6.18",
       "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
@@ -14856,6 +15283,15 @@
       "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
       "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
     },
+    "util-promisify": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/util-promisify/-/util-promisify-2.1.0.tgz",
+      "integrity": "sha1-PCI2R2xNMsX/PEcAKt18E7moKlM=",
+      "dev": true,
+      "requires": {
+        "object.getownpropertydescriptors": "^2.0.3"
+      }
+    },
     "utils-merge": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
Index: src/app/@core/backend/common/services/Bulletins.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/services/Bulletins.service.ts	(date 1582637424473)
+++ src/app/@core/backend/common/services/Bulletins.service.ts	(date 1582637424473)
@@ -0,0 +1,79 @@
+
+
+import {HttpService} from '../api/http.service';
+import { Bulletins } from '../model/Bulletins';
+import { Injectable } from '@angular/core';
+import {Observable, of, throwError} from 'rxjs';
+import { CountriesApi } from '../api/countries.api';
+import { CountryData, Country } from '../../../interfaces/common/countries';
+import {HttpHeaders} from '@angular/common/http';
+import {catchError, retry} from 'rxjs/operators';
+import { SmartTableData } from '../../../interfaces/common/smart-table';
+
+
+@Injectable()
+export class BulletinsService {
+  private baseurl = 'Bulletins';
+
+
+  // Http Headers
+  httpOptions = {
+    headers: new HttpHeaders({
+      'Content-Type': 'application/json',
+    }),
+  };
+
+  constructor(private http: HttpService) {
+  }
+
+  // POST
+  public create(data: Bulletins): Observable<Bulletins> {
+    console.log(data);
+    return this.http.post(this.baseurl + '/create', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // PUT
+  public update(data: Bulletins): Observable<Bulletins> {
+    console.log(data);
+    return this.http.put(this.baseurl + '/update', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // Get
+  public getAll(): Observable<any> {
+    return this.http.get(this.baseurl + '/getAll/'  )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // DELETE
+  public delete(id: number) {
+    return this.http.delete(this.baseurl + '/delete/' + id, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // Error handling
+  public errorHandl(error: any) {
+    let errorMessage = '';
+    if (error.error instanceof ErrorEvent) {
+      // Get client-side error
+      errorMessage = error.error.message;
+    } else {
+      // Get server-side error
+      errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;
+    }
+    return throwError(errorMessage);
+  }
+
+
+}
Index: src/app/@core/backend/common/services/ApercuCorps.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/services/ApercuCorps.service.ts	(date 1582637424357)
+++ src/app/@core/backend/common/services/ApercuCorps.service.ts	(date 1582637424357)
@@ -0,0 +1,89 @@
+
+
+import {HttpService} from '../api/http.service';
+import {ApercuCorps} from '../model/ApercuCorps';
+import { Injectable } from '@angular/core';
+import {Observable, of, throwError} from 'rxjs';
+import { CountriesApi } from '../api/countries.api';
+import { CountryData, Country } from '../../../interfaces/common/countries';
+import {HttpHeaders} from '@angular/common/http';
+import {catchError, retry} from 'rxjs/operators';
+import Any = jasmine.Any;
+
+@Injectable()
+export class ApercuCorpsService {
+  private baseurl = 'apercuCorps';
+
+
+  // Http Headers
+  httpOptions = {
+    headers: new HttpHeaders({
+      'Content-Type': 'application/json',
+    }),
+  };
+
+  constructor(private http: HttpService) {
+  }
+
+  // POST
+  public create(data: ApercuCorps): Observable<ApercuCorps> {
+    console.log(data);
+    return this.http.post(this.baseurl + '/create', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // PUT
+  public update(data: ApercuCorps): Observable<ApercuCorps> {
+    console.log(data);
+    return this.http.put(this.baseurl + '/update', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+
+
+  // Get
+  public getAll(): Observable<any> {
+    return this.http.get(this.baseurl + '/getAll/'  )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // DELETE
+  public delete(id: number) {
+    return this.http.delete(this.baseurl + '/delete/' + id, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // Get getById
+  public getById(id: number) {
+    return this.http.get(this.baseurl + '/getById/' + id, this.httpOptions )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // Error handling
+  public errorHandl(error: any) {
+    let errorMessage = '';
+    if (error.error instanceof ErrorEvent) {
+      // Get client-side error
+      errorMessage = error.error.message;
+    } else {
+      // Get server-side error
+      errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;
+    }
+    return throwError(errorMessage);
+  }
+
+
+}
Index: src/app/@core/backend/common/model/Cause.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/model/Cause.ts	(date 1582023592566)
+++ src/app/@core/backend/common/model/Cause.ts	(date 1582023592566)
@@ -0,0 +1,7 @@
+export class Cause {
+id: number;
+code: string;
+description: string;
+  constructor() {
+  }
+}
Index: src/app/@core/backend/common/services/Medecins.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/services/Medecins.service.ts	(date 1582646189508)
+++ src/app/@core/backend/common/services/Medecins.service.ts	(date 1582646189508)
@@ -0,0 +1,93 @@
+
+
+import {HttpService} from '../api/http.service';
+import { Medecins } from '../model/Medecins';
+import { Injectable } from '@angular/core';
+import {Observable, of, throwError} from 'rxjs';
+import { CountriesApi } from '../api/countries.api';
+import { CountryData, Country } from '../../../interfaces/common/countries';
+import {HttpHeaders} from '@angular/common/http';
+import {catchError, retry} from 'rxjs/operators';
+
+@Injectable()
+export class MedecinsService {
+  private baseurl = 'medicins';
+
+
+  // Http Headers
+  httpOptions = {
+    headers: new HttpHeaders({
+      'Content-Type': 'application/json',
+    }),
+  };
+
+  constructor(private http: HttpService) {
+  }
+
+  // POST
+  public create(data: Medecins): Observable<Medecins> {
+    console.log(data);
+    return this.http.post(this.baseurl + '/create', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // PUT
+  public update(data: Medecins): Observable<Medecins> {
+    console.log(data);
+    return this.http.put(this.baseurl + '/update', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+
+
+  // Get
+  public getAll(): Observable<any> {
+    return this.http.get(this.baseurl + '/getAll/'  )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // DELETE
+  public delete(id: number) {
+    return this.http.delete(this.baseurl + '/delete/' + id, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  public getById(id: number) {
+    return this.http.get(this.baseurl + '/getById/' + id, this.httpOptions )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  public getByNom(Nom: string) {
+    return this.http.get(this.baseurl + '/getByNom/' + Nom, this.httpOptions )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // Error handling
+  public errorHandl(error: any) {
+    let errorMessage = '';
+    if (error.error instanceof ErrorEvent) {
+      // Get client-side error
+      errorMessage = error.error.message;
+    } else {
+      // Get server-side error
+      errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;
+    }
+    return throwError(errorMessage);
+  }
+
+
+}
Index: src/app/@core/backend/common/services/Decedes.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/services/Decedes.service.ts	(date 1582646858983)
+++ src/app/@core/backend/common/services/Decedes.service.ts	(date 1582646858983)
@@ -0,0 +1,94 @@
+
+
+import {HttpService} from '../api/http.service';
+import { Decedes } from '../model/Decedes';
+import { Injectable } from '@angular/core';
+import {Observable, of, throwError} from 'rxjs';
+import { CountriesApi } from '../api/countries.api';
+import { CountryData, Country } from '../../../interfaces/common/countries';
+import {HttpHeaders} from '@angular/common/http';
+import {catchError, retry} from 'rxjs/operators';
+
+@Injectable()
+export class DecedesService {
+  private baseurl = 'decedes';
+
+
+  // Http Headers
+  httpOptions = {
+    headers: new HttpHeaders({
+      'Content-Type': 'application/json',
+    }),
+  };
+
+  constructor(private http: HttpService) {
+  }
+
+  // POST
+  public create(data: Decedes): Observable<Decedes> {
+    console.log(data);
+    return this.http.post(this.baseurl + '/create', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // PUT
+  public update(data: Decedes): Observable<Decedes> {
+    console.log(data);
+    return this.http.put(this.baseurl + '/update', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+
+
+  // Get
+  public getAll(): Observable<any> {
+    return this.http.get(this.baseurl + '/getAll/'  )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  public getById(id: number) {
+    return this.http.get(this.baseurl + '/getById/' + id, this.httpOptions )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // DELETE
+  public delete(id: number) {
+    return this.http.delete(this.baseurl + '/delete/' + id, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  public getByNom(Nom: string) {
+    return this.http.get(this.baseurl + '/getByNom/' + Nom, this.httpOptions )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // Error handling
+  public errorHandl(error: any) {
+    let errorMessage = '';
+    if (error.error instanceof ErrorEvent) {
+      // Get client-side error
+      errorMessage = error.error.message;
+    } else {
+      // Get server-side error
+      errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;
+    }
+    return throwError(errorMessage);
+  }
+
+
+}
Index: src/app/@core/backend/common/services/CertificatTransfertCorps.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/services/CertificatTransfertCorps.service.ts	(date 1582648002116)
+++ src/app/@core/backend/common/services/CertificatTransfertCorps.service.ts	(date 1582648002116)
@@ -0,0 +1,79 @@
+
+
+import {HttpService} from '../api/http.service';
+import { CertificatTransfertCorps } from '../model/CertificatTransfertCorps';
+import { Injectable } from '@angular/core';
+import {Observable, of, throwError} from 'rxjs';
+import { CountriesApi } from '../api/countries.api';
+import { CountryData, Country } from '../../../interfaces/common/countries';
+import {HttpHeaders} from '@angular/common/http';
+import {catchError, retry} from 'rxjs/operators';
+
+@Injectable()
+export class CertificatTransfertCorpsService {
+  private baseurl = 'certificatTransfertCorps';
+
+
+  // Http Headers
+  httpOptions = {
+    headers: new HttpHeaders({
+      'Content-Type': 'application/json',
+    }),
+  };
+
+  constructor(private http: HttpService) {
+  }
+
+  // POST
+  public create(data: CertificatTransfertCorps): Observable<any> {
+    console.log(data);
+    return this.http.post(this.baseurl + '/create', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // PUT
+  public update(data: CertificatTransfertCorps): Observable<CertificatTransfertCorps> {
+    console.log(data);
+    return this.http.put(this.baseurl + '/update', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+
+
+  // Get
+  public getAll(): Observable<any> {
+    return this.http.get(this.baseurl + '/getAll/'  )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // DELETE
+  public delete(id: number) {
+    return this.http.delete(this.baseurl + '/delete/' + id, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // Error handling
+  public errorHandl(error: any) {
+    let errorMessage = '';
+    if (error.error instanceof ErrorEvent) {
+      // Get client-side error
+      errorMessage = error.error.message;
+    } else {
+      // Get server-side error
+      errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;
+    }
+    return throwError(errorMessage);
+  }
+
+
+}
Index: src/app/@core/backend/common/services/CertificatMedicoLegal.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/services/CertificatMedicoLegal.service.ts	(date 1582637424660)
+++ src/app/@core/backend/common/services/CertificatMedicoLegal.service.ts	(date 1582637424660)
@@ -0,0 +1,79 @@
+
+
+import {HttpService} from '../api/http.service';
+import { CertificatMedicoLegal } from '../model/CertificatMedicoLegal';
+import { Injectable } from '@angular/core';
+import {Observable, of, throwError} from 'rxjs';
+import { CountriesApi } from '../api/countries.api';
+import { CountryData, Country } from '../../../interfaces/common/countries';
+import {HttpHeaders} from '@angular/common/http';
+import {catchError, retry} from 'rxjs/operators';
+
+@Injectable()
+export class CertificatMedicoLegalService {
+  private baseurl = 'certificatMedicoLegal';
+
+
+  // Http Headers
+  httpOptions = {
+    headers: new HttpHeaders({
+      'Content-Type': 'application/json',
+    }),
+  };
+
+  constructor(private http: HttpService) {
+  }
+
+  // POST
+  public create(data: CertificatMedicoLegal): Observable<CertificatMedicoLegal> {
+    console.log(data);
+    return this.http.post(this.baseurl + '/create', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // PUT
+  public update(data: CertificatMedicoLegal): Observable<CertificatMedicoLegal> {
+    console.log(data);
+    return this.http.put(this.baseurl + '/update', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+
+
+  // Get
+  public getAll(): Observable<any> {
+    return this.http.get(this.baseurl + '/getAll/'  )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // DELETE
+  public delete(id: number) {
+    return this.http.delete(this.baseurl + '/delete/' + id, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // Error handling
+  public errorHandl(error: any) {
+    let errorMessage = '';
+    if (error.error instanceof ErrorEvent) {
+      // Get client-side error
+      errorMessage = error.error.message;
+    } else {
+      // Get server-side error
+      errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;
+    }
+    return throwError(errorMessage);
+  }
+
+
+}
Index: src/app/@core/backend/common/services/CertificatEnterrement.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/services/CertificatEnterrement.service.ts	(date 1582637424601)
+++ src/app/@core/backend/common/services/CertificatEnterrement.service.ts	(date 1582637424601)
@@ -0,0 +1,79 @@
+
+
+import {HttpService} from '../api/http.service';
+import { CertificatEnterrement } from '../model/CertificatEnterrement';
+import { Injectable } from '@angular/core';
+import {Observable, of, throwError} from 'rxjs';
+import { CountriesApi } from '../api/countries.api';
+import { CountryData, Country } from '../../../interfaces/common/countries';
+import {HttpHeaders} from '@angular/common/http';
+import {catchError, retry} from 'rxjs/operators';
+
+@Injectable()
+export class CertificatEnterrementService {
+  private baseurl = 'certificatEnterrement';
+
+
+  // Http Headers
+  httpOptions = {
+    headers: new HttpHeaders({
+      'Content-Type': 'application/json',
+    }),
+  };
+
+  constructor(private http: HttpService) {
+  }
+
+  // POST
+  public create(data: CertificatEnterrement): Observable<CertificatEnterrement> {
+    console.log(data);
+    return this.http.post(this.baseurl + '/create', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // PUT
+  public update(data: CertificatEnterrement): Observable<CertificatEnterrement> {
+    console.log(data);
+    return this.http.put(this.baseurl + '/update', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+
+
+  // Get
+  public getAll(): Observable<any> {
+    return this.http.get(this.baseurl + '/getAll/'  )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // DELETE
+  public delete(id: number) {
+    return this.http.delete(this.baseurl + '/delete/' + id, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // Error handling
+  public errorHandl(error: any) {
+    let errorMessage = '';
+    if (error.error instanceof ErrorEvent) {
+      // Get client-side error
+      errorMessage = error.error.message;
+    } else {
+      // Get server-side error
+      errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;
+    }
+    return throwError(errorMessage);
+  }
+
+
+}
Index: src/app/@core/backend/common/services/Cause.service.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/services/Cause.service.ts	(date 1582644354865)
+++ src/app/@core/backend/common/services/Cause.service.ts	(date 1582644354865)
@@ -0,0 +1,93 @@
+
+
+import {HttpService} from '../api/http.service';
+import { Cause } from '../model/Cause';
+import { Injectable } from '@angular/core';
+import {Observable, of, throwError} from 'rxjs';
+import { CountriesApi } from '../api/countries.api';
+import { CountryData, Country } from '../../../interfaces/common/countries';
+import {HttpHeaders} from '@angular/common/http';
+import {catchError, retry} from 'rxjs/operators';
+
+@Injectable()
+export class CauseService {
+  private baseurl = 'cause';
+
+
+  // Http Headers
+  httpOptions = {
+    headers: new HttpHeaders({
+      'Content-Type': 'application/json',
+    }),
+  };
+
+  constructor(private http: HttpService) {
+  }
+
+  // POST
+  public create(data: Cause): Observable<Cause> {
+    console.log(data);
+    return this.http.post(this.baseurl + '/create', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // PUT
+  public update(data: Cause): Observable<Cause> {
+    console.log(data);
+    return this.http.put(this.baseurl + '/update', data, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+
+  // GetID
+  public getID(): Observable<number> {
+    return this.http.get(this.baseurl + '/getID/'  )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // Get
+  public getAll(): Observable<any> {
+    return this.http.get(this.baseurl + '/getAll/'  )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  public getByDescription(code: string) {
+    return this.http.get(this.baseurl + '/getByCode/' + code, this.httpOptions )
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+
+  // DELETE
+  public delete(id: number) {
+    return this.http.delete(this.baseurl + '/delete/' + id, this.httpOptions)
+      .pipe(
+        retry(1),
+        catchError(this.errorHandl),
+      );
+  }
+  // Error handling
+  public errorHandl(error: any) {
+    let errorMessage = '';
+    if (error.error instanceof ErrorEvent) {
+      // Get client-side error
+      errorMessage = error.error.message;
+    } else {
+      // Get server-side error
+      errorMessage = `Error Code: ${error.status}\nMessage: ${error.message}`;
+    }
+    return throwError(errorMessage);
+  }
+
+
+}
Index: src/app/pages/dashboard/dashboard.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/dashboard/dashboard.component.html	(revision cffe591a347345fd40ac9664e38c68aaf68ff20c)
+++ src/app/pages/dashboard/dashboard.component.html	(date 1582640816043)
@@ -4,55 +4,55 @@
   ~ See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.
   -->
 
-<div class="row">
-  <ng-container *ngIf="devices">
-    <div class="col-xxxl-3 col-md-6" *ngFor="let device of devices">
-      <ngx-status-card [title]="device.name"
-                       [on]="device.isOn"
-                       [type]="device.settings.type"
-                       (statusChanged)="changeDeviceStatus(device, $event)">
-        <i [ngClass]="device.settings.iconClass"></i>
-      </ngx-status-card>
-    </div>
-  </ng-container>
-  <ng-container *ngIf="!devices">
-    <div class="col-xxxl-3 col-md-6" *ngFor="let i of [1, 2, 3, 4]">
-      <div [nbSpinner]="!devices"><ngx-status-card-placeholder></ngx-status-card-placeholder></div>
-    </div>
-  </ng-container>
-</div>
+<!--<div class="row">-->
+<!--  <ng-container *ngIf="devices">-->
+<!--    <div class="col-xxxl-3 col-md-6" *ngFor="let device of devices">-->
+<!--      <ngx-status-card [title]="device.name"-->
+<!--                       [on]="device.isOn"-->
+<!--                       [type]="device.settings.type"-->
+<!--                       (statusChanged)="changeDeviceStatus(device, $event)">-->
+<!--        <i [ngClass]="device.settings.iconClass"></i>-->
+<!--      </ngx-status-card>-->
+<!--    </div>-->
+<!--  </ng-container>-->
+<!--  <ng-container *ngIf="!devices">-->
+<!--    <div class="col-xxxl-3 col-md-6" *ngFor="let i of [1, 2, 3, 4]">-->
+<!--      <div [nbSpinner]="!devices"><ngx-status-card-placeholder></ngx-status-card-placeholder></div>-->
+<!--    </div>-->
+<!--  </ng-container>-->
+<!--</div>-->
 
-<div class="row">
-  <div class="col-xxxl-3 col-xxl-4 col-lg-5 col-md-6">
-    <ngx-temperature></ngx-temperature>
-  </div>
+<!--<div class="row">-->
+<!--  <div class="col-xxxl-3 col-xxl-4 col-lg-5 col-md-6">-->
+<!--    <ngx-temperature></ngx-temperature>-->
+<!--  </div>-->
 
-  <div class="col-xxxl-9 col-xxl-8 col-lg-7 col-md-6">
-    <ngx-electricity></ngx-electricity>
-  </div>
-</div>
+<!--  <div class="col-xxxl-9 col-xxl-8 col-lg-7 col-md-6">-->
+<!--    <ngx-electricity></ngx-electricity>-->
+<!--  </div>-->
+<!--</div>-->
 
-<div class="row">
-  <div class="col-xxxl-9 col-xl-12">
-    <ngx-rooms></ngx-rooms>
-  </div>
+<!--<div class="row">-->
+<!--  <div class="col-xxxl-9 col-xl-12">-->
+<!--    <ngx-rooms></ngx-rooms>-->
+<!--  </div>-->
 
-  <div class="col-xxxl-3 col-xxl-4 col-lg-7 col-md-6">
-    <ngx-contacts></ngx-contacts>
-  </div>
+<!--  <div class="col-xxxl-3 col-xxl-4 col-lg-7 col-md-6">-->
+<!--    <ngx-contacts></ngx-contacts>-->
+<!--  </div>-->
 
-  <div class="col-xxxl-3 col-xxl-4 col-lg-5 col-md-6">
-    <div [nbSpinner]="!solarValue"><ngx-solar *ngIf="solarValue" [chartValue]="solarValue"></ngx-solar></div>
+<!--  <div class="col-xxxl-3 col-xxl-4 col-lg-5 col-md-6">-->
+<!--    <div [nbSpinner]="!solarValue"><ngx-solar *ngIf="solarValue" [chartValue]="solarValue"></ngx-solar></div>-->
 
-    <ngx-kitten></ngx-kitten>
-  </div>
+<!--    <ngx-kitten></ngx-kitten>-->
+<!--  </div>-->
 
-  <div class="col-xxxl-3 col-xxl-4 col-md-5">
-    <ngx-traffic></ngx-traffic>
-    <ngx-weather></ngx-weather>
-  </div>
+<!--  <div class="col-xxxl-3 col-xxl-4 col-md-5">-->
+<!--    <ngx-traffic></ngx-traffic>-->
+<!--    <ngx-weather></ngx-weather>-->
+<!--  </div>-->
 
-  <div class="col-xxxl-6 col-xxl-12 col-md-7">
-    <ngx-security-cameras></ngx-security-cameras>
-  </div>
-</div>
+<!--  <div class="col-xxxl-6 col-xxl-12 col-md-7">-->
+<!--    <ngx-security-cameras></ngx-security-cameras>-->
+<!--  </div>-->
+<!--</div>-->
Index: src/app/@core/backend/common/model/CertificatTransfertCorps.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/model/CertificatTransfertCorps.ts	(date 1582280976358)
+++ src/app/@core/backend/common/model/CertificatTransfertCorps.ts	(date 1582280976358)
@@ -0,0 +1,20 @@
+import {Medecins} from './Medecins';
+import {Decedes} from './Decedes';
+
+export class CertificatTransfertCorps {
+id: number;
+medecins: Medecins ;
+cercueilType: string;
+declaration: Date;
+remarque: string ;
+defunt: Decedes ;
+Declarant: string;
+tel: number;
+Destination: string ;
+mortuaire: string;
+inhumationSociete: string;
+ CIN: string;
+  constructor() {
+  }
+
+}
Index: src/app/@core/backend/common/model/CertificatMedicoLegal.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/model/CertificatMedicoLegal.ts	(date 1582214831023)
+++ src/app/@core/backend/common/model/CertificatMedicoLegal.ts	(date 1582214831023)
@@ -0,0 +1,14 @@
+import {Medecins} from './Medecins';
+import {Decedes} from './Decedes';
+
+export class CertificatMedicoLegal {
+id: number;
+medecin: Medecins ;
+declarant: string;
+address: string;
+ CIN: string;
+declaration: Date;
+defunt: Decedes ;
+  constructor() {
+  }
+}
Index: src/app/@core/backend/common/model/CertificatEnterrement.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/model/CertificatEnterrement.ts	(date 1582642303735)
+++ src/app/@core/backend/common/model/CertificatEnterrement.ts	(date 1582642303735)
@@ -0,0 +1,10 @@
+
+
+export class CertificatEnterrement {
+id: number;
+defunt: String ;
+ville: string;
+declaration: Date;
+  constructor() {
+  }
+}
Index: src/app/@core/backend/common/model/ApercuCorps.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/model/ApercuCorps.ts	(date 1582284233302)
+++ src/app/@core/backend/common/model/ApercuCorps.ts	(date 1582284233302)
@@ -0,0 +1,11 @@
+ import {Medecins} from './Medecins';
+
+export class ApercuCorps {
+id: number;
+defunt: string;
+CenterMedicoLegal: string;
+dateDeclaration: Date;
+Medecin:  Medecins ;
+constructor() {
+}
+}
Index: src/app/@core/backend/common/model/Bulletins.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/model/Bulletins.ts	(date 1582112950880)
+++ src/app/@core/backend/common/model/Bulletins.ts	(date 1582112950880)
@@ -0,0 +1,17 @@
+export class Bulletins {
+
+id: number;
+typeBulletin: number;
+declaration: Date;
+cercle: string;
+diagnostique: string;
+LieuEntrement: string;
+province: string;
+residece: string;
+cimetiere: string;
+NumTombe: number;
+remarque: number;
+centre: string;
+  constructor() {
+  }
+}
Index: src/app/@core/backend/common/model/Medecins.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/model/Medecins.ts	(date 1582129117273)
+++ src/app/@core/backend/common/model/Medecins.ts	(date 1582129117273)
@@ -0,0 +1,9 @@
+export class Medecins {
+id: number ;
+nom: string ;
+prenom: string ;
+Adress: string;
+CIN: string ;
+constructor() {
+}
+}
Index: src/app/@core/backend/common/model/Decedes.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@core/backend/common/model/Decedes.ts	(date 1582192670956)
+++ src/app/@core/backend/common/model/Decedes.ts	(date 1582192670956)
@@ -0,0 +1,27 @@
+import {Cause} from './Cause';
+
+export class Decedes {
+  id: number;
+  CIN: string;
+  heure: string;
+  prenom: string;
+  nom: string;
+  sexe: string;
+  dateNaissance: Date;
+  adresse: string;
+  nationalite: string;
+  fils: string;
+  mortNe: boolean;
+  profession: string;
+  dateDeces: Date;
+  natureMort: Date;
+  causeMort: string;
+  causeInitial: Cause;
+  causeImmdiate: Cause;
+  lieuxDeces: string;
+  Etat: string;
+  obstacle: boolean;
+  typeCertifica: string;
+  constructor() {
+  }
+}
Index: src/app/pages/bulletins-dm/medcins/medcins.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/medcins/medcins.component.html	(date 1582635167713)
+++ src/app/pages/bulletins-dm/medcins/medcins.component.html	(date 1582635167713)
@@ -0,0 +1,73 @@
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">Ajouter un Medecin</div>
+      <div class="col-sm-6"><button (click)="save()" class="btn btn-outline-primary fa-pull-right" ><i class="fa fa-plus-circle"></i> Add</button></div></div>
+  </nb-card-header>
+  <nb-card-body>
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Nom Medecin</label>
+          <input [(ngModel)]="medcin.nom" class="form-control" type="string" nbInput fullWidth
+                 id="nom" placeholder="Nom Medecin">
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Prenom Medecin</label>
+          <input [(ngModel)]="medcin.prenom" class="form-control" type="string" nbInput fullWidth
+                 id="prenom" placeholder="Prenom Medecin">
+
+        </div>
+      </div>
+    </div>
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Adresse de Medecin</label>
+          <input [(ngModel)]="medcin.Adress" class="form-control" type="string" nbInput fullWidth
+                 id="adresse" placeholder="Adresse de Medecin">
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">CIN d'encadrant</label>
+          <input [(ngModel)]="medcin.CIN" class="form-control" type="string" nbInput fullWidth
+                 id="cin" placeholder="CIN d'encadrant">
+
+        </div>
+      </div>
+    </div>
+
+
+
+  </nb-card-body>
+</nb-card>
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">
+        gestion des Medecins
+      </div>
+    </div>
+  </nb-card-header>
+  <nb-card-body>
+
+    <ng2-smart-table
+      [settings]="settings"
+      [source]="source"
+      (deleteConfirm)="onDeleteConfirm($event)"
+      (editConfirm)="onEditConfirm($event)"
+      (createConfirm)="createConfirm($event)">
+    </ng2-smart-table>
+  </nb-card-body>
+</nb-card>
+
+
+
+
Index: src/app/pages/bulletins-dm/medcins/medcins.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/medcins/medcins.component.ts	(date 1582540309245)
+++ src/app/pages/bulletins-dm/medcins/medcins.component.ts	(date 1582540309245)
@@ -0,0 +1,117 @@
+import { Component, OnInit } from '@angular/core';
+import {Medecins} from '../../../@core/backend/common/model/Medecins';
+import {LocalDataSource} from 'ng2-smart-table';
+import {Decedes} from '../../../@core/backend/common/model/Decedes';
+import {MedecinsService} from '../../../@core/backend/common/services/Medecins.service';
+import {UsersService} from '../../../@core/backend/common/services/users.service';
+
+@Component({
+  selector: 'ngx-medcins',
+  templateUrl: './medcins.component.html',
+  styleUrls: ['./medcins.component.scss'],
+  providers: [MedecinsService],
+})
+export class MedcinsComponent implements OnInit {
+  settings = {
+    add: {
+      addButtonContent: '<i class="nb-plus"></i>',
+      createButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmCreate: true,
+    },
+    edit: {
+      editButtonContent: '<i class="nb-edit"></i>',
+      saveButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmSave: true,
+      mode: 'inline',
+    },
+    delete: {
+      deleteButtonContent: '<i class="nb-trash"></i>',
+      confirmDelete: true,
+
+    },
+    columns: {
+      nom: {
+        title: 'Nom',
+        type: 'string',
+      },
+      prenom: {
+        title: 'Prénom',
+        type: 'string',
+      },
+      adress: {
+        title: 'Adresse',
+        type: 'string',
+      },
+      CIN: {
+        title: 'CIN d\'encadrant',
+        type: 'string',
+      },
+    },
+  };
+  // source: LocalDataSource = new LocalDataSource();
+  medcin: Medecins = new Medecins();
+  private source: Medecins;
+
+  constructor(private service: MedecinsService, private userservice: UsersService) { }
+
+  init() {
+    this.service.getAll().subscribe(data => {
+      this.source = data;
+    });
+  }
+
+  ngOnInit() {
+    this.userservice.getCurrentUser().subscribe(data => {
+      console.log(data);
+      console.log(data.role);
+    });
+    this.init();
+  }
+
+  data: any;
+  save() {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+        this.service.create(this.medcin).subscribe(obj => {});
+        this.reset();
+        window.alert('Les données ont été ajoutées avec succès à la base de données');
+        this.init();
+    });
+  }
+
+  private reset() {
+    this.medcin = new Medecins();
+  }
+
+  createConfirm(event) {
+    this.service.getAll().subscribe(data => {
+        event.confirm.resolve(event.newData);
+        this.service.create(event.newData).subscribe(obj => {});
+         this.init();
+    });
+  }
+
+  onEditConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+        event.confirm.resolve(event.newData);
+        this.service.update(event.newData).subscribe(obj => {
+        });
+        window.alert('les donnes sont change avec succes');
+        this.init();
+    });
+  }
+  onDeleteConfirm(event) {
+    if (window.confirm('Are you sure you want to delete?')) {
+      event.confirm.resolve(event.data);
+      this.service.delete(event.data.id).subscribe(data => {
+        console.log(data);
+        this.init();
+      });
+    } else {
+      event.confirm.reject(event.data);
+    }
+  }
+}
Index: src/app/pages/bulletins-dm/decedes/decedes.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/decedes/decedes.component.spec.ts	(date 1582038249426)
+++ src/app/pages/bulletins-dm/decedes/decedes.component.spec.ts	(date 1582038249426)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { DecedesComponent } from './decedes.component';
+
+describe('DecedesComponent', () => {
+  let component: DecedesComponent;
+  let fixture: ComponentFixture<DecedesComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ DecedesComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(DecedesComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/bulletins-dm/decedes/decedes.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/decedes/decedes.component.scss	(date 1582038249442)
+++ src/app/pages/bulletins-dm/decedes/decedes.component.scss	(date 1582038249442)
@@ -0,0 +1,0 @@
Index: src/app/pages/bulletins-dm/decedes/decedes.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/decedes/decedes.component.html	(date 1582643635466)
+++ src/app/pages/bulletins-dm/decedes/decedes.component.html	(date 1582643635466)
@@ -0,0 +1,226 @@
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">Ajouter les informations d'un décéde</div>
+      <div class="col-sm-6"><button (click)="save()" class="btn btn-outline-primary fa-pull-right" ><i class="fa fa-plus-circle"></i> Add</button></div></div>
+  </nb-card-header>
+  <nb-card-body>
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Nom décédè</label>
+          <input [(ngModel)]="decede.nom" class="form-control" type="string" nbInput fullWidth
+                 id="Nom" placeholder="Nom décédè">
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Prénom décédè</label>
+          <input [(ngModel)]="decede.prenom" class="form-control" type="string" nbInput fullWidth
+                 id="prénom" placeholder="Prénom décédè">
+
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Fille ou fils de : </label>
+          <input [(ngModel)]="decede.fils" class="form-control" type="string" nbInput fullWidth
+                 id="fils" placeholder="Fille ou fils de ">
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Sexe</label>
+          <nb-select [(ngModel)]="decede.sexe"  class="type-select " nbSelect fullWidth
+                     placeholder="Sexe">
+            <nb-option *ngFor="let t of sexe" [value]="t">{{t}}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+    </div>
+
+
+    <div class="row">
+
+      <div class="col-sm-6">
+        <nb-checkbox id="defaultCheck" [(ngModel)]="decede.mortNe"> S'agit-il d'un mort né</nb-checkbox>
+
+
+        </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Date de naissance</label>
+          <input [(ngModel)]="decede.dateNaissance" class="form-control" type="Date" nbInput fullWidth
+                 id="DateNai" placeholder="Date de naissance">
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Nationalité</label>
+          <input [(ngModel)]="decede.nationalite" class="form-control" type="string" nbInput fullWidth
+                 id="nationalite" placeholder="Nationalité">
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Adresse</label>
+          <input [(ngModel)]="decede.adresse" class="form-control" type="string" nbInput fullWidth
+                 id="adresse" placeholder="Adresse">
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">CIN</label>
+          <input [(ngModel)]="decede.CIN" class="form-control" type="string" nbInput fullWidth
+                 id="cin" placeholder="CIN">
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Etat Matrimonial</label>
+          <nb-select [(ngModel)]="decede.Etat"  class="type-select " nbSelect fullWidth
+                     placeholder="Etat Matrimonial">
+            <nb-option *ngFor="let t of Etat" [value]="t"> {{ t}}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label"> Profession </label>
+          <input [(ngModel)]="decede.profession" class="form-control" type="string" nbInput fullWidth
+                 id="profession" placeholder="Profession">
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Date décès</label>
+          <input [(ngModel)]="decede.dateDeces" class="form-control" type="Date" nbInput fullWidth
+                 id="dateD" placeholder="Date décès">
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Heure de décès</label>
+          <input [(ngModel)]="decede.heure" class="form-control" type="string" nbInput fullWidth
+                 id="heure" placeholder="Heure de décès">
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Lieu Décès</label>
+          <nb-select [(ngModel)]="decede.lieuxDeces"  class="type-select " nbSelect fullWidth
+                     placeholder="lieu Deces">
+            <nb-option *ngFor="let t of LieuD" [value]="t">{{ t}}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+    </div>
+    <div class="row">
+
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label"> Nature du mort </label>
+          <nb-select [(ngModel)]="decede.natureMort"  class="type-select " nbSelect fullWidth
+                     placeholder="Nature du mort">
+            <nb-option *ngFor="let t of NatureMort" [value]="t"> {{ t}}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Cause de mort</label>
+          <nb-select [(ngModel)]="decede.causeMort"  class="type-select " nbSelect fullWidth
+                     placeholder="Cause de mort">
+            <nb-option *ngFor="let t of CauseMort" [value]="t"> {{ t}}</nb-option>
+          </nb-select>
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label"> Cause initiale </label>
+          <nb-select [(ngModel)]="initialeID"  class="type-select " nbSelect fullWidth
+                     placeholder="Cause initiale">
+            <nb-option *ngFor="let t of couseIni" [value]="t"> {{ t}}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Cause immédiate</label>
+          <nb-select [(ngModel)]="immediateID"  class="type-select " nbSelect fullWidth
+                     placeholder="Cause immédiate">
+            <nb-option *ngFor="let t of couseIni" [value]="t"> {{ t}}</nb-option>
+          </nb-select>
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <nb-checkbox id="defaultCheck1" [(ngModel)]="decede.obstacle">Obstacle medicolégal</nb-checkbox>
+      </div>
+    </div>
+   </nb-card-body>
+</nb-card>
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">
+       Gestion des décédés
+      </div>
+    </div>
+  </nb-card-header>
+  <nb-card-body>
+
+    <ng2-smart-table
+      (createConfirm)="createConfirm($event)"
+      [settings]="settings"
+      [source]="source"
+      (deleteConfirm)="onDeleteConfirm($event)"
+      (editConfirm)="onEditConfirm($event)">
+    </ng2-smart-table>
+  </nb-card-body>
+</nb-card>
+
+
+
+
+
Index: src/app/pages/bulletins-dm/decedes/decedes.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/decedes/decedes.component.ts	(date 1582644708096)
+++ src/app/pages/bulletins-dm/decedes/decedes.component.ts	(date 1582644708096)
@@ -0,0 +1,202 @@
+
+import { Component, OnInit } from '@angular/core';
+import {Medecins} from '../../../@core/backend/common/model/Medecins';
+import {LocalDataSource} from 'ng2-smart-table';
+import {Decedes} from '../../../@core/backend/common/model/Decedes';
+import {MedecinsService} from '../../../@core/backend/common/services/Medecins.service';
+import {UsersService} from '../../../@core/backend/common/services/users.service';
+import {DecedesService} from '../../../@core/backend/common/services/Decedes.service';
+import {CauseService} from '../../../@core/backend/common/services/Cause.service';
+
+@Component({
+ selector: 'ngx-decedes',
+   templateUrl: './decedes.component.html',
+ styleUrls: ['./decedes.component.scss'],
+  providers: [ DecedesService, UsersService, CauseService],
+})
+export class DecedesComponent implements OnInit {
+  settings = {
+    add: {
+      addButtonContent: '<i class="nb-plus"></i>',
+      createButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmCreate: true,
+    },
+    edit: {
+      editButtonContent: '<i class="nb-edit"></i>',
+      saveButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmSave: true,
+      mode: 'inline',
+    },
+    delete: {
+      deleteButtonContent: '<i class="nb-trash"></i>',
+      confirmDelete: true,
+
+    },
+    columns: {
+     id: {
+        title: 'numéro de registre',
+        type: 'number',
+        editable: false,
+      },
+      nom: {
+        title: 'Nom',
+        type: 'string',
+      },
+      prenom: {
+        title: 'Prénom',
+        type: 'string',
+      },
+      sexe: {
+        title: 'Sexe',
+        type: 'string',
+      },
+      CIN: {
+        title: 'CIN',
+        type: 'string',
+      },
+      dateNaissance: {
+        title: 'Date de naissance',
+        type: 'Date',
+      },
+      fils: {
+        title: 'Fille ou fils de ',
+        type: 'String',
+      },
+      nationalite: {
+        title: 'Nationalité ',
+        type: 'String',
+      },
+      adresse: {
+        title: 'Adresse',
+        type: 'String',
+      },
+      Etat: {
+        title: 'Etat Matrimonial',
+        type: 'String',
+      },
+      profession: {
+        title: 'Profession',
+        type: 'String',
+      },
+      dateDeces: {
+        title: 'date décès',
+        type: 'date',
+      },
+      heure: {
+        title: 'date décès',
+        type: 'string',
+      },
+      lieuxDeces: {
+        title: 'Lieu de décès',
+        type: 'String',
+      },
+      natureMort: {
+        title: 'nature de mort',
+        type: 'String',
+      },
+      mortNe: {
+        title: 'S\'agit-il d\'un mort né',
+        type: 'boolean',
+      },
+      causeMort: {
+        title: 'Cause de mort',
+        type: 'String',
+      },
+      causeInitial: {
+        title: 'Cause initiale',
+        type: 'Cause',
+      },
+      causeImmdiate: {
+        title: 'Cause immédiate',
+        type: 'Cause',
+      },
+      obstacle: {
+        title: 'Obstacle medicolégal',
+        type: 'boolean',
+      },
+    },
+  };
+  sexe = ['Femme', 'Homme', 'indéterminé'];
+ Etat = ['Célibataire', 'Marié', 'Divorcé', 'Veuf(ve)'];
+ LieuD = ['Domicile', 'Hopital public', 'Clinique', 'Voie public', 'Lieu de travail', 'Autre'];
+  NatureMort = ['Mort naturel', 'Mort non naturel'];
+  CauseMort = ['accident', 'homicide', 'suicide', 'inconnu', 'noyade', 'brûlure', 'intoxication', 'traumatisme'];
+  couseIni = [];
+  private source: Decedes;
+
+  constructor(private service: DecedesService, private userservice: UsersService, private serviceCause: CauseService) {
+    this.serviceCause.getAll().subscribe( dataa => {
+   dataa.forEach ( obj => { this.couseIni.push(obj.code); });
+    });
+  }
+  init() {
+    this.service.getAll().subscribe(data => {
+      this.source = data;
+    });
+  }
+  // source: LocalDataSource = new LocalDataSource();
+  decede: Decedes = new Decedes();
+  initialeID: string;
+  immediateID: string;
+
+  ngOnInit() {
+    this.userservice.getCurrentUser().subscribe(data => {
+      console.log(data);
+      console.log(data.role);
+    });
+    this.init();
+  }
+  save() {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      this.serviceCause.getByDescription(this.initialeID).subscribe(obj => {
+        this.decede.causeInitial = obj;
+      });
+      this.serviceCause.getByDescription(this.immediateID).subscribe(obj => {
+        this.decede.causeImmdiate = obj;
+      });
+      this.service.create(this.decede).subscribe(obj => {});
+      this.reset();
+      this.init();
+      window.alert('Les données ont été ajoutées avec succès à la base de données');
+    });
+  }
+
+  private reset() {
+    this.decede = new Decedes();
+  }
+
+
+  createConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      event.confirm.resolve(event.newData);
+      this.service.create(event.newData).subscribe(obj => {
+      });
+      this.init();
+    });
+  }
+
+  onEditConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      event.confirm.resolve(event.newData);
+      this.service.update(event.newData).subscribe(obj => {
+      });
+      window.alert('les donnes sont change avec succes');
+      this.init();
+    });
+  }
+  onDeleteConfirm(event) {
+    if (window.confirm('Are you sure you want to delete?')) {
+      event.confirm.resolve(event.data);
+      this.service.delete(event.data.id).subscribe(data => {
+        console.log(data);
+        this.init();
+      });
+    } else {
+      event.confirm.reject(event.data);
+    }
+  }
+}
Index: src/app/pages/bulletins-dm/bulletins/bulletins.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/bulletins/bulletins.component.spec.ts	(date 1582038220554)
+++ src/app/pages/bulletins-dm/bulletins/bulletins.component.spec.ts	(date 1582038220554)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { BulletinsComponent } from './bulletins.component';
+
+describe('BulletinsComponent', () => {
+  let component: BulletinsComponent;
+  let fixture: ComponentFixture<BulletinsComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ BulletinsComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(BulletinsComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/bulletins-dm/bulletins/bulletins.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/bulletins/bulletins.component.scss	(date 1582038220554)
+++ src/app/pages/bulletins-dm/bulletins/bulletins.component.scss	(date 1582038220554)
@@ -0,0 +1,0 @@
Index: src/app/pages/bulletins-dm/bulletins/bulletins.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/bulletins/bulletins.component.html	(date 1582545752203)
+++ src/app/pages/bulletins-dm/bulletins/bulletins.component.html	(date 1582545752203)
@@ -0,0 +1,202 @@
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">Bulletin</div>
+      <div class="col-sm-6"><button (click)="save()" class="btn btn-outline-primary fa-pull-right" ><i class="fa fa-plus-circle"></i> Add</button></div></div>
+  </nb-card-header>
+  <nb-card-body>
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Type de bulletin</label>
+          <nb-select  [(ngModel)]="Bulletins.typeBulletin" class="type-select "  nbSelect fullWidth
+                      placeholder="Type de bulletin" >
+            <nb-option *ngFor="let t of typeBulletin" [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Date de déclaration</label>
+          <input  [(ngModel)]="Bulletins.declaration" class="form-control"  type="Date"  fullWidth
+                      placeholder="Date de déclaration" >
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Province ou préfecture</label><br>
+          <input [(ngModel)]="Bulletins.province" class="form-control" ng-required="expression" type="string" nbInput fullWidth
+                 id="province" placeholder="Province ou préfecture">
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Cercle</label><br>
+          <input [(ngModel)]="Bulletins.cercle" class="form-control" ng-required="expression" type="string" nbInput fullWidth
+                 id="cercle" placeholder="Cercle">
+
+
+
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Municipalité/Centre/Commune</label><br>
+          <input [(ngModel)]="Bulletins.centre" class="form-control"  type="string" nbInput fullWidth
+                 id="municipalite" placeholder="Municipalité/Centre/Commune">
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Diagnostiue Attestation</label>
+          <nb-select  [(ngModel)]="Bulletins.diagnostique" class="type-select "  nbSelect fullWidth
+                      placeholder="Diagnostiue Attestation" >
+            <nb-option *ngFor="let t of diagnostique" [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Milieu résidence</label>
+          <nb-select  [(ngModel)]="Bulletins.residece" class="type-select "  nbSelect fullWidth
+                      placeholder="Milieu résidence" >
+            <nb-option *ngFor="let t of Milieu" [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Lieu Entrement</label>
+          <nb-select  [(ngModel)]="Bulletins.LieuEntrement" class="type-select "  nbSelect fullWidth
+                      placeholder="Lieu Entrement" >
+            <nb-option *ngFor="let t of Lieu" [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+    </div>
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Cimetière</label>
+          <nb-select  [(ngModel)]="Bulletins.cimetiere" class="type-select "  nbSelect fullWidth
+                      placeholder="Cimetière" >
+            <nb-option *ngFor="let t of cimetiere" [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Numéro de tombe</label>
+          <nb-select  [(ngModel)]="Bulletins.NumTombe" class="type-select "  nbSelect fullWidth
+                      placeholder="Numéro de tombe" >
+            <nb-option *ngFor="let t of num" [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+    </div>
+    <div class="row">
+      <div class="col-sm-12">
+        <div class="form-group">
+          <label  class="label">Remarque</label><br>
+          <textarea [(ngModel)]="Bulletins.remarque" class="form-control" type="string" nbInput fullWidth
+                 id="remarque" placeholder="Remarque">
+          </textarea>
+        </div>
+
+      </div>
+    </div>
+
+    <nb-tabset>
+      <nb-tab tabTitle="Informations de decede">
+        <nb-card>
+          <nb-card-header>
+            <div class="row">
+              <div class="col-sm-6">
+                Les informations des décèdes
+              </div>
+            </div>
+          </nb-card-header>
+          <nb-card-body>
+
+            <ng2-smart-table
+              (createConfirm)="createConfirmD($event)"
+              [settings]="settingsD"
+              [source]="sourceD"
+              (deleteConfirm)="onDeleteConfirmD($event)"
+              (editConfirm)="onEditConfirmD($event)">
+            </ng2-smart-table>
+          </nb-card-body>
+        </nb-card>
+
+      </nb-tab>
+      <nb-tab tabTitle="Informations de médcin">
+        <nb-card>
+          <nb-card-header>
+            <div class="row">
+              <div class="col-sm-6">
+                Les informations des médcins
+              </div>
+            </div>
+          </nb-card-header>
+          <nb-card-body>
+
+            <ng2-smart-table
+              (createConfirm)="createMedcin($event)"
+              [settings]="settingsM"
+              [source]="sourceM"
+              (deleteConfirm)="onDeleteMedcin($event)"
+              (editConfirm)="onEditMedcin($event)">
+            </ng2-smart-table>
+          </nb-card-body>
+        </nb-card>
+
+
+
+
+      </nb-tab>
+    </nb-tabset>
+
+  </nb-card-body>
+
+</nb-card>
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">
+       Bulletins
+      </div>
+    </div>
+  </nb-card-header>
+  <nb-card-body>
+
+    <ng2-smart-table
+      (createConfirm)="createConfirm($event)"
+      [settings]="settings"
+      [source]="source"
+      (deleteConfirm)="onDeleteConfirm($event)"
+      (editConfirm)="onEditConfirm($event)">
+    </ng2-smart-table>
+  </nb-card-body>
+</nb-card>
+
+
+
+
Index: src/app/pages/bulletins-dm/bulletins/bulletins.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/bulletins/bulletins.component.ts	(date 1582545041697)
+++ src/app/pages/bulletins-dm/bulletins/bulletins.component.ts	(date 1582545041697)
@@ -0,0 +1,367 @@
+import { Component, OnInit } from '@angular/core';
+import {Bulletins} from '../../../@core/backend/common/model/Bulletins';
+import {BulletinsService} from '../../../@core/backend/common/services/Bulletins.service';
+import {LocalDataSource} from 'ng2-smart-table';
+import {DecedesComponent} from '../decedes/decedes.component';
+import {DecedesService} from '../../../@core/backend/common/services/Decedes.service';
+import {MedecinsService} from '../../../@core/backend/common/services/Medecins.service';
+import {SmartTableData} from '../../../@core/interfaces/common/smart-table';
+import {UsersService} from '../../../@core/backend/common/services/users.service';
+import {Medecins} from '../../../@core/backend/common/model/Medecins';
+import {Decedes} from '../../../@core/backend/common/model/Decedes';
+
+@Component({
+  selector: 'ngx-bulletins',
+  templateUrl: './bulletins.component.html',
+  styleUrls: ['./bulletins.component.scss'],
+  providers: [ BulletinsService, DecedesService, MedecinsService],
+})
+
+export class BulletinsComponent implements OnInit {
+  Bulletins: Bulletins = new Bulletins();
+  typeBulletin = ['Bulletin de décès', 'Bulletin de mortinalité'];
+  Milieu = ['Urbain', 'Rural', 'Inconnu'];
+  Lieu = ['Tanger', 'Asila', 'Tetouan'];
+  num = [1, 2, 3, 4, 5, 6, 7, 8];
+  diagnostique = ['Mort naturelle', 'Mort non naturelle'];
+  cimetiere = ['Cimetière Almojahidine', 'Cimetière Sidi Omar'];
+  data: any;
+  private sourceD: Decedes;
+  settings = {
+    add: {
+      addButtonContent: '<i class="nb-plus"></i>',
+      createButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmCreate: true,
+    },
+    edit: {
+      editButtonContent: '<i class="nb-edit"></i>',
+      saveButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmSave: true,
+      mode: 'inline',
+    },
+    delete: {
+      deleteButtonContent: '<i class="nb-trash"></i>',
+      confirmDelete: true,
+
+    },
+    columns: {
+      typeBulletin: {
+        title: 'Type Bulletin',
+        type: 'string',
+      },
+      declaration: {
+        title: 'Date de déclaration',
+        type: 'Date',
+      },
+      province: {
+        title: 'Province ou préfecture',
+        type: 'number',
+      },
+      cercle: {
+        title: 'Cercle',
+        type: 'number',
+      },
+      centre: {
+        title: 'Municipalité/Centre/Commune',
+        type: 'number',
+      },
+      diagnostique: {
+        title: 'Diagnostiue Attestation',
+        type: 'number',
+      },
+      residece: {
+        title: 'Milieu résidence',
+        type: 'number',
+      },
+      LieuEntrement: {
+        title: 'Lieu Entrement',
+        type: 'number',
+      },
+      cimetiere: {
+        title: 'Cimetière',
+        type: 'number',
+      },
+      NumTombe: {
+        title: 'Numéro de tombe',
+        type: 'number',
+      },
+      recherche: {
+        title: 'Recherche',
+        type: 'number',
+      },
+    },
+  };
+  // source: Bulletins = new LocalDataSource();
+  settingsD = {
+    add: {
+      addButtonContent: '<i class="nb-plus"></i>',
+      createButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmCreate: true,
+    },
+    edit: {
+      editButtonContent: '<i class="nb-edit"></i>',
+      saveButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmSave: true,
+      mode: 'inline',
+    },
+    delete: {
+      deleteButtonContent: '<i class="nb-trash"></i>',
+      confirmDelete: true,
+
+    },
+    columns: {
+      id: {
+        title: 'numéro de registre',
+        type: 'number',
+        editable: false,
+      },
+      nom: {
+        title: 'Nom',
+        type: 'string',
+      },
+      prenom: {
+        title: 'Prénom',
+        type: 'string',
+      },
+      sexe: {
+        title: 'Sexe',
+        type: 'string',
+      },
+      CIN: {
+        title: 'CIN',
+        type: 'string',
+      },
+      dateNaissance: {
+        title: 'Date de naissance',
+        type: 'Date',
+      },
+      fils: {
+        title: 'Fille ou fils de ',
+        type: 'String',
+      },
+      nationalite: {
+        title: 'Nationalité ',
+        type: 'String',
+      },
+      adresse: {
+        title: 'Adresse',
+        type: 'String',
+      },
+      Etat: {
+        title: 'Etat Matrimonial',
+        type: 'String',
+      },
+      profession: {
+        title: 'Profession',
+        type: 'String',
+      },
+      dateDeces: {
+        title: 'date décès',
+        type: 'Date',
+      },
+      heure: {
+        title: 'date décès',
+        type: 'Date',
+      },
+      lieuxDeces: {
+        title: 'Lieu de décès',
+        type: 'String',
+      },
+      natureMort: {
+        title: 'nature de mort',
+        type: 'String',
+      },
+      mortNe: {
+        title: 'S\'agit-il d\'un mort né',
+        type: 'boolean',
+      },
+      causeMort: {
+        title: 'Cause de mort',
+        type: 'String',
+      },
+      causeInitial: {
+        title: 'Cause initiale',
+        type: 'String',
+      },
+      causeImmdiate: {
+        title: 'Cause immédiate',
+        type: 'String',
+      },
+      obstacle: {
+        title: 'Obstacle medicolégal',
+        type: 'boolean',
+      },
+    },
+  };
+  settingsM = {
+    add: {
+      addButtonContent: '<i class="nb-plus"></i>',
+      createButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmCreate: true,
+    },
+    edit: {
+      editButtonContent: '<i class="nb-edit"></i>',
+      saveButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmSave: true,
+      mode: 'inline',
+    },
+    delete: {
+      deleteButtonContent: '<i class="nb-trash"></i>',
+      confirmDelete: true,
+
+    },
+    columns: {
+      nom: {
+        title: 'Nom',
+        type: 'string',
+      },
+      prenom: {
+        title: 'Prénom',
+        type: 'string',
+      },
+      adress: {
+        title: 'Adresse',
+        type: 'string',
+      },
+      CIN: {
+        title: 'CIN d\'encadrant',
+        type: 'string',
+      },
+    },
+  };
+  private source: Bulletins;
+  private sourceM: Medecins;
+
+  constructor(private service: BulletinsService, private serviceD: DecedesService, private serviceM: MedecinsService,
+              private serviceS: SmartTableData, private userservice: UsersService ) {
+  }
+
+
+  init() {
+    this.service.getAll().subscribe(data => {
+      this.source = data;
+    });
+  }
+  initD() {
+    this.serviceD.getAll().subscribe(data => {
+      this.sourceD = data;
+    });
+  }
+  initM() {
+    this.serviceM.getAll().subscribe(data => {
+      this.sourceM = data;
+    });
+  }
+
+  ngOnInit() {
+    this.userservice.getCurrentUser().subscribe(data => {
+      console.log(data);
+      console.log(data.role);
+    });
+    this.init();
+    this.initM();
+    this.initD();
+  }
+
+
+  save() {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      this.service.create(this.Bulletins).subscribe(obj => {});
+      this.reset();
+      window.alert('Les données ont été ajoutées avec succès à la base de données');
+    });
+  }
+
+  private reset() {
+    this.Bulletins = new Bulletins();
+  }
+  createConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      event.confirm.resolve(event.newData);
+      this.service.create(event.newData).subscribe(obj => {});
+     // this.init();
+    });
+  }
+  onEditConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      event.confirm.resolve(event.newData);
+      this.service.update(event.newData).subscribe(obj => {
+      });
+      window.alert('les donnes sont change avec succes');
+    });
+  }
+  onDeleteConfirm(event) {
+    if (window.confirm('Are you sure you want to delete?')) {
+      event.confirm.resolve(event.data);
+      this.service.delete(event.data.id).subscribe(data => {
+        console.log(data);
+      });
+    } else {
+      event.confirm.reject(event.data);
+    }
+  }
+  createConfirmD(event) {
+    this.serviceD.getAll().subscribe(data => {
+      event.confirm.resolve(event.newData);
+      this.serviceD.create(event.newData).subscribe(obj => {});
+       this.initD();
+    });
+  }
+  onEditConfirmD(event) {
+    this.serviceD.getAll().subscribe(data => {
+      console.log(data);
+      event.confirm.resolve(event.newData);
+      this.serviceD.update(event.newData).subscribe(obj => {
+        this.initD();
+      });
+      window.alert('les donnes sont change avec succes');
+    });
+  }
+  onDeleteConfirmD(event) {
+    if (window.confirm('Are you sure you want to delete?')) {
+      event.confirm.resolve(event.data);
+      this.serviceD.delete(event.data.id).subscribe(data => {
+        console.log(data);
+        this.initD();
+      });
+    } else {
+      event.confirm.reject(event.data);
+    }
+  }
+  createMedcin(event) {
+    this.serviceM.getAll().subscribe(data => {
+      event.confirm.resolve(event.newData);
+      this.serviceM.create(event.newData).subscribe(obj => {});
+      this.initM();
+    });
+  }
+  onEditMedcin(event) {
+    this.serviceM.getAll().subscribe(data => {
+      console.log(data);
+      event.confirm.resolve(event.newData);
+      this.serviceM.update(event.newData).subscribe(obj => {
+        this.initM();
+      });
+      window.alert('les donnes sont change avec succes');
+    });
+  }
+  onDeleteMedcin(event) {
+    if (window.confirm('Are you sure you want to delete?')) {
+      event.confirm.resolve(event.data);
+      this.serviceM.delete(event.data.id).subscribe(data => {
+        console.log(data);
+        this.initM();
+      });
+    } else {
+      event.confirm.reject(event.data);
+    }
+  }
+}
Index: src/app/pages/bulletins-dm/medcins/medcins.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/medcins/medcins.component.spec.ts	(date 1582038285694)
+++ src/app/pages/bulletins-dm/medcins/medcins.component.spec.ts	(date 1582038285694)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { MedcinsComponent } from './medcins.component';
+
+describe('MedcinsComponent', () => {
+  let component: MedcinsComponent;
+  let fixture: ComponentFixture<MedcinsComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ MedcinsComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(MedcinsComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/bulletins-dm/medcins/medcins.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/medcins/medcins.component.scss	(date 1582038285694)
+++ src/app/pages/bulletins-dm/medcins/medcins.component.scss	(date 1582038285694)
@@ -0,0 +1,0 @@
Index: src/app/pages/bulletins-dm/bulletins-dm-routing.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/bulletins-dm-routing.module.ts	(date 1582107019963)
+++ src/app/pages/bulletins-dm/bulletins-dm-routing.module.ts	(date 1582107019963)
@@ -0,0 +1,37 @@
+import { NgModule } from '@angular/core';
+import { Routes, RouterModule } from '@angular/router';
+import {BulletinsDMComponent} from './bulletins-dm.component';
+import {BulletinsComponent} from './bulletins/bulletins.component';
+import {DecedesComponent} from './decedes/decedes.component';
+import {MedcinsComponent} from './medcins/medcins.component';
+import {CauseDecesComponent} from './cause-deces/cause-deces.component';
+
+
+
+const routes: Routes = [{
+  path: '',
+  component: BulletinsDMComponent,
+  children: [
+    {
+      path: 'Bulletins',
+      component: BulletinsComponent,
+    },
+    {
+      path: 'decedes',
+      component: DecedesComponent,
+    },
+    {
+      path: 'cause-deces',
+      component: CauseDecesComponent,
+    },
+    {
+      path: 'medcins',
+      component: MedcinsComponent,
+    },
+  ],
+}];
+
+@NgModule({
+  imports: [RouterModule.forChild(routes)],
+  exports: [RouterModule]})
+export class BulletinsDMRoutingModule { }
Index: src/app/pages/bulletins-dm/bulletins-dm.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/bulletins-dm.component.ts	(date 1582104457220)
+++ src/app/pages/bulletins-dm/bulletins-dm.component.ts	(date 1582104457220)
@@ -0,0 +1,15 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-bulletins-dm',
+  template: `<router-outlet></router-outlet>`})
+export class BulletinsDMComponent implements OnInit {
+
+  constructor() {
+  }
+
+  ngOnInit() {
+  }
+}
+
+
Index: src/app/pages/bulletins-dm/bulletins-dm.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/bulletins-dm/bulletins-dm.module.ts	(date 1582559490337)
+++ src/app/pages/bulletins-dm/bulletins-dm.module.ts	(date 1582559490337)
@@ -0,0 +1,32 @@
+import { NgModule } from '@angular/core';
+import { CommonModule } from '@angular/common';
+
+import { BulletinsDMRoutingModule } from './bulletins-dm-routing.module';
+import { BulletinsComponent } from './bulletins/bulletins.component';
+import { DecedesComponent } from './decedes/decedes.component';
+import { MedcinsComponent } from './medcins/medcins.component';
+import {BulletinsDMComponent} from './bulletins-dm.component';
+import { CauseDecesComponent } from './cause-deces/cause-deces.component';
+import {NbCardModule, NbCheckboxModule, NbSelectModule, NbTabsetModule} from '@nebular/theme';
+import {FormsModule} from '@angular/forms';
+import {Ng2SmartTableModule} from 'ng2-smart-table';
+
+
+@NgModule({
+  declarations: [BulletinsDMComponent,
+    BulletinsComponent, DecedesComponent, MedcinsComponent, CauseDecesComponent],
+    imports: [
+        CommonModule,
+        BulletinsDMRoutingModule,
+        NbCardModule,
+        NbSelectModule,
+        FormsModule,
+        NbTabsetModule,
+        Ng2SmartTableModule,
+        NbCheckboxModule,
+    ],
+  exports: [
+    DecedesComponent,
+  ],
+})
+export class BulletinsDMModule { }
Index: src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.html	(date 1582639742932)
+++ src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.html	(date 1582639742932)
@@ -0,0 +1,77 @@
+
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">Apercu du corps</div>
+      <div class="col-sm-6"><button (click)="save()" class="btn btn-outline-primary fa-pull-right" ><i class="fa fa-plus-circle"></i> Add</button></div></div>
+  </nb-card-header>
+  <nb-card-body>
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Défunt</label>
+          <input [(ngModel)]="ApercuCorps.defunt" class="form-control" type="string" nbInput fullWidth
+                 id="defunt" placeholder="Défunt">
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Centre médico-légal</label>
+          <input [(ngModel)]="ApercuCorps.CenterMedicoLegal" class="form-control" type="string" nbInput fullWidth
+                 id="centre" placeholder="Centre médico-légal">
+
+        </div>
+      </div>
+
+
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Médcin/ Assistant de santé</label>
+          <nb-select [(ngModel)]="MedecinID"  class="type-select " nbSelect fullWidth
+                     placeholder="Medcin/ Assistant de santé">
+            <nb-option *ngFor="let t of NomMedcin" [value]="t">{{t}}</nb-option>
+          </nb-select>
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Date déclaration</label>
+          <input [(ngModel)]="ApercuCorps.dateDeclaration" class="form-control" type="Date" nbInput fullWidth
+                 id="dateDec" placeholder="Declarant">
+
+        </div>
+      </div>
+    </div>
+
+
+
+  </nb-card-body>
+</nb-card>
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">
+        Apercu du corps
+      </div>
+    </div>
+  </nb-card-header>
+  <nb-card-body>
+
+    <ng2-smart-table
+      [settings]="settings"
+      [source]="source"
+      (deleteConfirm)="onDeleteConfirm($event)"
+      (editConfirm)="onEditConfirm($event)"
+      (createConfirm)="createConfirm($event)">
+    </ng2-smart-table>
+  </nb-card-body>
+</nb-card>
+
+
+
+
Index: src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.ts	(date 1582645678407)
+++ src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.ts	(date 1582645678407)
@@ -0,0 +1,129 @@
+import { Component, OnInit } from '@angular/core';
+import {ApercuCorps} from '../../../@core/backend/common/model/ApercuCorps';
+import {ApercuCorpsService} from '../../../@core/backend/common/services/ApercuCorps.service';
+import {LocalDataSource} from 'ng2-smart-table';
+import {UsersService} from '../../../@core/backend/common/services/users.service';
+import {MedecinsService} from '../../../@core/backend/common/services/Medecins.service';
+import {DecedesService} from '../../../@core/backend/common/services/Decedes.service';
+@Component({
+  selector: 'ngx-apercu-du-corp',
+  templateUrl: './apercu-du-corp.component.html',
+  styleUrls: ['./apercu-du-corp.component.scss'],
+  providers: [ApercuCorpsService, UsersService, MedecinsService, DecedesService],
+})
+export class ApercuDuCorpComponent implements OnInit {
+  ApercuCorps: ApercuCorps = new ApercuCorps();
+  settings = {
+    add: {
+      addButtonContent: '<i class="nb-plus"></i>',
+      createButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmCreate: true,
+    },
+    edit: {
+      editButtonContent: '<i class="nb-edit"></i>',
+      saveButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmSave: true,
+      mode: 'inline',
+    },
+    delete: {
+      deleteButtonContent: '<i class="nb-trash"></i>',
+      confirmDelete: true,
+
+    },
+    columns: {
+      defunt: {
+        title: 'Defunt',
+        type: 'Decedes',
+      },
+  CenterMedicoLegal: {
+        title: 'Centre médico-Légal',
+        type: 'string',
+      },
+      Medecin: {
+        title: 'Medcin',
+        type: 'Medecins',
+      },
+      dateDeclaration: {
+        title: 'date declaration',
+        type: 'Date',
+      },
+    },
+  };
+  NomMedcin = [];
+  NomDecede = [];
+  private source: ApercuCorps;
+  MedecinID: number;
+  constructor(private service: ApercuCorpsService, private userservice: UsersService,
+              private serviceMedcin: MedecinsService, private serviceDecede: DecedesService ) {
+    this.serviceMedcin.getAll().subscribe( data => {
+      data.forEach ( obj => { this.NomMedcin.push(obj.id); });
+    });
+  }
+
+  init() {
+    this.service.getAll().subscribe(data => {
+      this.serviceMedcin.getById(this.MedecinID).subscribe(obj => {
+        this.ApercuCorps.Medecin = obj;
+      });
+      this.source = data;
+    });
+  }
+
+  ngOnInit() {
+    this.userservice.getCurrentUser().subscribe(data => {
+      console.log(data);
+      console.log(data.role);
+    });
+    this.init();
+  }
+
+  save() {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      this.serviceMedcin.getById(this.MedecinID).subscribe(obj => {
+        this.ApercuCorps.Medecin = obj;
+      });
+      this.service.create(this.ApercuCorps).subscribe(obj => {
+      });
+      this.reset();
+      this.init();
+      window.alert('Les données ont été ajoutées avec succès à la base de données');
+      this.init();
+    });
+  }
+
+  private reset() {
+    this.ApercuCorps = new ApercuCorps();
+  }
+  createConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      event.confirm.resolve(event.newData);
+      this.service.create(event.newData).subscribe(obj => {});
+      this.init();
+    });
+  }
+
+  onEditConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      event.confirm.resolve(event.newData);
+      this.service.update(event.newData).subscribe(obj => {
+      });
+      window.alert('les donnes sont change avec succes');
+      this.init();
+    });
+  }
+  onDeleteConfirm(event) {
+    if (window.confirm('Are you sure you want to delete?')) {
+      event.confirm.resolve(event.data);
+      this.service.delete(event.data.id).subscribe(data => {
+        console.log(data);
+        this.init();
+      });
+    } else {
+      event.confirm.reject(event.data);
+    }
+  }
+}
Index: src/app/pages/certificat/enterrement/enterrement.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/enterrement/enterrement.component.spec.ts	(date 1582038643624)
+++ src/app/pages/certificat/enterrement/enterrement.component.spec.ts	(date 1582038643624)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { EnterrementComponent } from './enterrement.component';
+
+describe('EnterrementComponent', () => {
+  let component: EnterrementComponent;
+  let fixture: ComponentFixture<EnterrementComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ EnterrementComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(EnterrementComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/certificat/enterrement/enterrement.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/enterrement/enterrement.component.scss	(date 1582038643640)
+++ src/app/pages/certificat/enterrement/enterrement.component.scss	(date 1582038643640)
@@ -0,0 +1,0 @@
Index: src/app/pages/certificat/enterrement/enterrement.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/enterrement/enterrement.component.html	(date 1582642392014)
+++ src/app/pages/certificat/enterrement/enterrement.component.html	(date 1582642392014)
@@ -0,0 +1,62 @@
+
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6"> Certificat Enterrement</div>
+      <div class="col-sm-6"><button (click)="save()" class="btn btn-outline-primary fa-pull-right" ><i class="fa fa-plus-circle"></i> Add</button></div></div>
+  </nb-card-header>
+  <nb-card-body>
+    <div class="row">
+      <div class="col-sm-12">
+        <div class="form-group">
+          <label  class="label">Défunt</label>
+          <input [(ngModel)]="Enterrement.defunt" class="form-control" type="string" nbInput fullWidth
+                 id="defunt" placeholder="Defunt">
+        </div>
+      </div>
+      <div class="col-sm-12">
+        <div class="form-group">
+          <label  class="label">Ville</label>
+          <input [(ngModel)]="Enterrement.ville" class="form-control" type="string" nbInput fullWidth
+                 id="centre" placeholder="Ville">
+
+        </div>
+      </div>
+    </div>
+    <div class="row">
+      <div class="col-sm-12">
+        <div class="form-group">
+          <label  class="label">Date déclaration</label>
+          <input [(ngModel)]="Enterrement.declaration" class="form-control" type="Date" nbInput fullWidth
+                 id="dateDec" placeholder="Declarant">
+
+        </div>
+      </div>
+    </div>
+  </nb-card-body>
+</nb-card>
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">
+        Certificat Enterrement
+      </div>
+    </div>
+  </nb-card-header>
+  <nb-card-body>
+
+    <ng2-smart-table
+      [settings]="settings"
+      [source]="source"
+      (deleteConfirm)="onDeleteConfirm($event)"
+      (editConfirm)="onEditConfirm($event)"
+      (createConfirm)="createConfirm($event)">
+    </ng2-smart-table>
+  </nb-card-body>
+</nb-card>
+
+
+
+
Index: src/app/pages/certificat/enterrement/enterrement.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/enterrement/enterrement.component.ts	(date 1582642571503)
+++ src/app/pages/certificat/enterrement/enterrement.component.ts	(date 1582642571503)
@@ -0,0 +1,112 @@
+import { Component, OnInit } from '@angular/core';
+import {LocalDataSource} from 'ng2-smart-table';
+import {CertificatEnterrement} from '../../../@core/backend/common/model/CertificatEnterrement';
+import {CertificatEnterrementService} from '../../../@core/backend/common/services/CertificatEnterrement.service';
+import {UsersService} from '../../../@core/backend/common/services/users.service';
+import {DecedesService} from '../../../@core/backend/common/services/Decedes.service';
+import {MedecinsService} from '../../../@core/backend/common/services/Medecins.service';
+
+@Component({
+  selector: 'ngx-enterrement',
+  templateUrl: './enterrement.component.html',
+  styleUrls: ['./enterrement.component.scss'],
+  providers: [CertificatEnterrementService, UsersService, DecedesService, MedecinsService],
+})
+export class EnterrementComponent implements OnInit {
+  Enterrement: CertificatEnterrement = new CertificatEnterrement();
+  settings = {
+    add: {
+      addButtonContent: '<i class="nb-plus"></i>',
+      createButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmCreate: true,
+    },
+    edit: {
+      editButtonContent: '<i class="nb-edit"></i>',
+      saveButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmSave: true,
+      mode: 'inline',
+    },
+    delete: {
+      deleteButtonContent: '<i class="nb-trash"></i>',
+      confirmDelete: true,
+
+    },
+    columns: {
+      defunt: {
+        title: 'Defunt',
+        type: 'Decedes',
+      },
+      ville: {
+        title: 'ville',
+        type: 'string',
+      },
+      declaration: {
+        title: 'Date declaration',
+        type: 'Date',
+      },
+    },
+  };
+  private source: CertificatEnterrement;
+  NomDecede = [];
+  DefuntId: number;
+  constructor(private service: CertificatEnterrementService, private userservice: UsersService,
+              private serviceDecede: DecedesService, private serviceM: MedecinsService) {
+  }
+
+  init() {
+    this.service.getAll().subscribe(data => {
+      this.source = data;
+    });
+  }
+
+  ngOnInit() {
+    this.userservice.getCurrentUser().subscribe(data => {
+      console.log(data);
+      console.log(data.role);
+    });
+    this.init();
+  }
+
+  save() {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      this.service.create(this.Enterrement).subscribe(obj => {});
+      this.reset();
+      this.init();
+      window.alert('Les données ont été ajoutées avec succès à la base de données');
+    });
+  }
+
+  private reset() {
+    this.Enterrement = new CertificatEnterrement();
+  }
+  createConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      event.confirm.resolve(event.newData);
+      this.service.create(event.newData).subscribe(obj => {});
+      // this.init();
+    });
+  }
+
+  onEditConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      event.confirm.resolve(event.newData);
+      this.service.update(event.newData).subscribe(obj => {
+      });
+      window.alert('les donnes sont change avec succes');
+    });
+  }
+  onDeleteConfirm(event) {
+    if (window.confirm('Are you sure you want to delete?')) {
+      event.confirm.resolve(event.data);
+      this.service.delete(event.data.id).subscribe(data => {
+        console.log(data);
+      });
+    } else {
+      event.confirm.reject(event.data);
+    }
+  }
+}
Index: src/app/pages/certificat/certificat.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/certificat.module.ts	(date 1582286814970)
+++ src/app/pages/certificat/certificat.module.ts	(date 1582286814970)
@@ -0,0 +1,25 @@
+import { NgModule } from '@angular/core';
+import { CommonModule } from '@angular/common';
+
+import { CertificatRoutingModule } from './certificat-routing.module';
+import { CertificatComponent } from './certificat.component';
+import { TransfertCorpsComponent } from './transfert-corps/transfert-corps.component';
+import { ApercuDuCorpComponent } from './apercu-du-corp/apercu-du-corp.component';
+import { EnterrementComponent } from './enterrement/enterrement.component';
+import {NbCardModule, NbSelectModule} from '@nebular/theme';
+import {FormsModule} from '@angular/forms';
+import {Ng2SmartTableModule} from "ng2-smart-table";
+
+@NgModule({
+  declarations: [CertificatComponent,
+    TransfertCorpsComponent, ApercuDuCorpComponent, EnterrementComponent],
+  imports: [
+    CommonModule,
+    CertificatRoutingModule,
+    NbCardModule,
+    FormsModule,
+    Ng2SmartTableModule,
+    NbSelectModule,
+  ],
+})
+export class CertificatModule { }
Index: src/app/pages/certificat/transfert-corps/transfert-corps.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/transfert-corps/transfert-corps.component.spec.ts	(date 1582038550503)
+++ src/app/pages/certificat/transfert-corps/transfert-corps.component.spec.ts	(date 1582038550503)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { TransfertCorpsComponent } from './transfert-corps.component';
+
+describe('TransfertCorpsComponent', () => {
+  let component: TransfertCorpsComponent;
+  let fixture: ComponentFixture<TransfertCorpsComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ TransfertCorpsComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(TransfertCorpsComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/certificat/transfert-corps/transfert-corps.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/transfert-corps/transfert-corps.component.scss	(date 1582038550503)
+++ src/app/pages/certificat/transfert-corps/transfert-corps.component.scss	(date 1582038550503)
@@ -0,0 +1,0 @@
Index: src/app/pages/certificat/transfert-corps/transfert-corps.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/transfert-corps/transfert-corps.component.html	(date 1582642023628)
+++ src/app/pages/certificat/transfert-corps/transfert-corps.component.html	(date 1582642023628)
@@ -0,0 +1,151 @@
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">Certificat du transfert du corps</div>
+      <div class="col-sm-6"><button (click)="save()" class="btn btn-outline-primary fa-pull-right" ><i class="fa fa-plus-circle"></i> Add</button></div></div>
+  </nb-card-header>
+  <nb-card-body>
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Médcin</label>
+          <nb-select [(ngModel)]="MedcinID"  class="type-select " nbSelect fullWidth
+                     placeholder="Médcin">
+            <nb-option *ngFor="let t of NomMedcin" [value]="t">{{t}}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Défunt</label>
+          <nb-select [(ngModel)]="defauntID"  class="type-select " nbSelect fullWidth
+                     placeholder="Defunt">
+            <nb-option *ngFor="let t of NomDecede" [value]="t">{{t}}</nb-option>
+          </nb-select>
+        </div>
+      </div>
+
+
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Date declaration</label>
+          <input [(ngModel)]="trnsfrCorps.declaration" class="form-control" type="Date" nbInput fullWidth
+                 id="dateDec" placeholder="Date declaration">
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Déclarant</label>
+          <input [(ngModel)]="trnsfrCorps.Declarant" class="form-control" type="string" nbInput fullWidth
+                 id="declarant" placeholder="Declarant">
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">CIN declarant</label>
+          <input [(ngModel)]="trnsfrCorps.CIN" class="form-control" type="Date" nbInput fullWidth
+                 id="CINdec" placeholder="CIN Declarant">
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Tel N°</label>
+          <input [(ngModel)]="trnsfrCorps.tel" class="form-control" type="string" nbInput fullWidth
+                 id="tel" placeholder="Tel..">
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Le corps sera transporté en cercueil </label>
+          <nb-select  [(ngModel)]="trnsfrCorps.cercueilType" class="type-select "  nbSelect fullWidth
+                      placeholder="" >
+            <nb-option *ngFor="let t of cercueil" [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+      </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Destination du corps</label>
+          <nb-select  [(ngModel)]="trnsfrCorps.Destination" class="type-select "  nbSelect fullWidth
+                      placeholder="Destination du corps" >
+            <nb-option *ngFor="let t of destinationCorps" [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+
+
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Fourgon mortuaire Mle </label>
+          <input [(ngModel)]="trnsfrCorps.mortuaire" class="form-control" type="string" nbInput fullWidth
+                 id="fourgon" placeholder="Fourgon mortuaire Mle">
+
+        </div>
+      </div>
+
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">De la sociéte ou l'administration chargé de l'inhumation ou du transfert</label>
+          <input [(ngModel)]="trnsfrCorps.inhumationSociete" class="form-control" type="string" nbInput fullWidth
+                 id="txt" placeholder="">
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+      <div class="col-sm-12">
+        <div class="form-group">
+          <label  class="label">Remarque </label>
+          <textarea [(ngModel)]="trnsfrCorps.remarque" class="form-control" type="string"  fullWidth
+                 id="Remarque" placeholder="Remarque...">
+          </textarea>
+
+        </div>
+      </div>
+    </div>
+  </nb-card-body>
+</nb-card>
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">
+        Certificat du transfert du corps
+      </div>
+    </div>
+  </nb-card-header>
+  <nb-card-body>
+
+    <ng2-smart-table
+      [settings]="settings"
+      [source]="source"
+      (deleteConfirm)="onDeleteConfirm($event)"
+      (editConfirm)="onEditConfirm($event)"
+      (createConfirm)="createConfirm($event)">
+    </ng2-smart-table>
+  </nb-card-body>
+</nb-card>
+
+
+
+
Index: src/app/pages/certificat/transfert-corps/transfert-corps.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/transfert-corps/transfert-corps.component.ts	(date 1582648369731)
+++ src/app/pages/certificat/transfert-corps/transfert-corps.component.ts	(date 1582648369731)
@@ -0,0 +1,172 @@
+import { Component, OnInit } from '@angular/core';
+import {CertificatTransfertCorps} from '../../../@core/backend/common/model/CertificatTransfertCorps';
+import {CertificatTransfertCorpsService} from '../../../@core/backend/common/services/CertificatTransfertCorps.service';
+import {LocalDataSource} from 'ng2-smart-table';
+import {UsersService} from '../../../@core/backend/common/services/users.service';
+import {DecedesService} from '../../../@core/backend/common/services/Decedes.service';
+import {MedecinsService} from '../../../@core/backend/common/services/Medecins.service';
+import {Medecins} from '../../../@core/backend/common/model/Medecins';
+import {Decedes} from '../../../@core/backend/common/model/Decedes';
+
+@Component({
+  selector: 'ngx-transfert-corps',
+  templateUrl: './transfert-corps.component.html',
+  styleUrls: ['./transfert-corps.component.scss'],
+  providers: [CertificatTransfertCorpsService, UsersService, DecedesService, MedecinsService ],
+})
+export class TransfertCorpsComponent implements OnInit {
+  cercueil = ['En zinc et bois', 'En bois'];
+  destinationCorps = ['tanger', 'Rabat'];
+  trnsfrCorps: CertificatTransfertCorps = new CertificatTransfertCorps();
+  NomDecede = [];
+  settings = {
+    add: {
+      addButtonContent: '<i class="nb-plus"></i>',
+      createButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmCreate: true,
+    },
+    edit: {
+      editButtonContent: '<i class="nb-edit"></i>',
+      saveButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmSave: true,
+      mode: 'inline',
+    },
+    delete: {
+      deleteButtonContent: '<i class="nb-trash"></i>',
+      confirmDelete: true,
+
+    },
+    columns: {
+      Declarant: {
+        title: 'Declarant',
+        type: 'string',
+      },
+      CIN: {
+        title: 'CIN',
+        type: 'string',
+      },
+      declaration: {
+        title: 'Date declaration',
+        type: 'Date',
+      },
+      Destination: {
+        title: 'Destination',
+        type: 'string',
+      },
+      cercueilType: {
+        title: 'Type cercueil',
+        type: 'string',
+      },
+      tel: {
+        title: 'Tel',
+        type: 'string',
+      },
+      mortuaire: {
+        title: 'Fourgon mortuaire',
+        type: 'string',
+      },
+      inhumationSociete: {
+        title: 'Societe d\'inhumation',
+        type: 'string',
+      },
+      medecins: {
+        title: 'Médcin',
+        type: 'Medecins',
+      },
+      defunt: {
+        title: 'Defunt',
+        type: 'Decedes',
+      },
+      remarque: {
+        title: 'Remarque',
+        type: 'string',
+      },
+    },
+  };
+  private source: CertificatTransfertCorps;
+  defauntID: number;
+  MedcinID: number;
+  NomMedcin = [];
+
+  constructor(private service: CertificatTransfertCorpsService, private serviceM: MedecinsService,
+              private userservice: UsersService, private serviceDecede: DecedesService) {
+    this.serviceDecede.getAll().subscribe( data => {
+      data.forEach ( obj => { this.NomDecede.push(obj.id); });
+    });
+
+    this.serviceM.getAll().subscribe( data => {
+      data.forEach ( obj => { this.NomMedcin.push(obj.id); });
+    });
+  }
+
+  init() {
+    this.service.getAll().subscribe(data => {
+      this.source = data;
+    });
+  }
+
+  ngOnInit() {
+    this.userservice.getCurrentUser().subscribe(data => {
+      console.log(data);
+      console.log(data.role);
+    });
+    this.init();
+  }
+
+  save() {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      this.serviceM.getById(this.MedcinID).subscribe(objj => {
+        this.trnsfrCorps.medecins = objj;
+        this.serviceDecede.getById(this.defauntID).subscribe(obj1 => {
+          this.trnsfrCorps.defunt = obj1;
+      this.service.create(this.trnsfrCorps).subscribe(obj => {
+      });
+      this.reset();
+      window.alert('Les données ont été ajoutées avec succès à la base de données');
+      this.init();
+    }); });
+    });
+  }
+
+  private reset() {
+    this.trnsfrCorps = new CertificatTransfertCorps();
+  }
+  // init() {
+  //   this.service.getAll().subscribe(data => {
+  //     this.source = data;
+  //   });
+  // }
+
+  createConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      event.confirm.resolve(event.newData);
+      this.service.create(event.newData).subscribe(obj => {});
+     this.init();
+    });
+  }
+
+  onEditConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      event.confirm.resolve(event.newData);
+      this.service.update(event.newData).subscribe(obj => {
+      });
+      window.alert('les donnes sont change avec succes');
+      this.init();
+    });
+  }
+  onDeleteConfirm(event) {
+    if (window.confirm('Are you sure you want to delete?')) {
+      event.confirm.resolve(event.data);
+      this.service.delete(event.data.id).subscribe(data => {
+        console.log(data);
+        this.init();
+      });
+    } else {
+      event.confirm.reject(event.data);
+    }
+  }
+}
Index: src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.spec.ts	(date 1582038628461)
+++ src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.spec.ts	(date 1582038628461)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { ApercuDuCorpComponent } from './apercu-du-corp.component';
+
+describe('ApercuDuCorpComponent', () => {
+  let component: ApercuDuCorpComponent;
+  let fixture: ComponentFixture<ApercuDuCorpComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ ApercuDuCorpComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(ApercuDuCorpComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.scss	(date 1582038628477)
+++ src/app/pages/certificat/apercu-du-corp/apercu-du-corp.component.scss	(date 1582038628477)
@@ -0,0 +1,0 @@
Index: src/app/pages/documents-admin/constation/constation.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/constation/constation.component.spec.ts	(date 1582038422038)
+++ src/app/pages/documents-admin/constation/constation.component.spec.ts	(date 1582038422038)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { ConstationComponent } from './constation.component';
+
+describe('ConstationComponent', () => {
+  let component: ConstationComponent;
+  let fixture: ComponentFixture<ConstationComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ ConstationComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(ConstationComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/documents-admin/constation/constation.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/constation/constation.component.scss	(date 1582038422054)
+++ src/app/pages/documents-admin/constation/constation.component.scss	(date 1582038422054)
@@ -0,0 +1,0 @@
Index: src/app/pages/documents-admin/constation/constation.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/constation/constation.component.html	(date 1582215287397)
+++ src/app/pages/documents-admin/constation/constation.component.html	(date 1582215287397)
@@ -0,0 +1,1 @@
+<ngx-decedes></ngx-decedes>
Index: src/app/pages/documents-admin/constation/constation.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/constation/constation.component.ts	(date 1582107443963)
+++ src/app/pages/documents-admin/constation/constation.component.ts	(date 1582107443963)
@@ -0,0 +1,15 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-constation',
+  templateUrl: './constation.component.html',
+  styleUrls: ['./constation.component.scss'],
+})
+export class ConstationComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/pages/certificat/certificat-routing.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/certificat-routing.module.ts	(date 1582107283999)
+++ src/app/pages/certificat/certificat-routing.module.ts	(date 1582107283999)
@@ -0,0 +1,35 @@
+import { NgModule } from '@angular/core';
+import { Routes, RouterModule } from '@angular/router';
+import {ConstationComponent} from '../documents-admin/constation/constation.component';
+import {AttestationComponent} from '../documents-admin/attestation/attestation.component';
+import {CertificatComponent} from './certificat.component';
+import {TransfertCorpsComponent} from './transfert-corps/transfert-corps.component';
+import {ApercuDuCorpComponent} from './apercu-du-corp/apercu-du-corp.component';
+import {EnterrementComponent} from './enterrement/enterrement.component';
+
+
+const routes: Routes = [{
+  path: '',
+  component: CertificatComponent,
+  children: [
+    {
+      path: 'transfertCorps',
+      component: TransfertCorpsComponent,
+    },
+    {
+      path: 'ApercuDuCorp',
+      component: ApercuDuCorpComponent,
+    },
+    {
+      path: 'enterrement',
+      component: EnterrementComponent,
+    },
+  ],
+}];
+
+
+@NgModule({
+  imports: [RouterModule.forChild(routes)],
+  exports: [RouterModule],
+})
+export class CertificatRoutingModule { }
Index: src/app/pages/certificat/certificat.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/certificat/certificat.component.ts	(date 1582068957792)
+++ src/app/pages/certificat/certificat.component.ts	(date 1582068957792)
@@ -0,0 +1,11 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-certificat',
+  template: `
+    <router-outlet></router-outlet>
+  `,
+})
+export class CertificatComponent {
+
+}
Index: src/app/pages/documents-admin/medicolegal/medicolegal.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/medicolegal/medicolegal.component.html	(date 1582646278516)
+++ src/app/pages/documents-admin/medicolegal/medicolegal.component.html	(date 1582646278516)
@@ -0,0 +1,96 @@
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">Ajouter un certificat médico_Légal</div>
+      <div class="col-sm-6"><button (click)="save()" class="btn btn-outline-primary fa-pull-right" ><i class="fa fa-plus-circle"></i> Add</button></div></div>
+  </nb-card-header>
+  <nb-card-body>
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Médcin</label>
+          <nb-select  [(ngModel)]="MedNom" class="type-select "  nbSelect fullWidth
+                      placeholder="Médcin" >
+            <nb-option *ngFor="let t of NomMedecin " [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Défunt</label>
+          <nb-select  [(ngModel)]="MedNom" class="type-select "  nbSelect fullWidth
+                      placeholder="Défunt" >
+            <nb-option *ngFor="let t of  NomDecede " [value]="t" >{{ t }}</nb-option>
+          </nb-select>
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Déclarant</label><br>
+          <input [(ngModel)]="Medicolegal.declarant" class="form-control" ng-required="expression" type="string" nbInput fullWidth
+                 id="dec" placeholder="Déclarant">
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">CIN Déclarant</label><br>
+          <input [(ngModel)]="Medicolegal.CIN" class="form-control" ng-required="expression" type="string" nbInput fullWidth
+                 id="cin" placeholder="CIN Déclarant">
+
+
+
+
+        </div>
+      </div>
+    </div>
+
+    <div class="row">
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Adresse Déclarant</label><br>
+          <input [(ngModel)]="Medicolegal.address" class="form-control"  type="string" nbInput fullWidth
+                 id="adresse" placeholder="Adresse Déclarant">
+        </div>
+      </div>
+      <div class="col-sm-6">
+        <div class="form-group">
+          <label  class="label">Date déclaration</label>
+          <input [(ngModel)]="Medicolegal.declaration" class="form-control"  type="Date" nbInput fullWidth
+                 id="datedec" placeholder="Date déclaration">
+
+        </div>
+      </div>
+
+    </div>
+  </nb-card-body>
+
+</nb-card>
+
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">
+        Certificat médico_Légal
+      </div>
+    </div>
+  </nb-card-header>
+  <nb-card-body>
+
+    <ng2-smart-table
+      (createConfirm)="createConfirm($event)"
+      [settings]="settings"
+      [source]="source"
+      (deleteConfirm)="onDeleteConfirm($event)"
+      (editConfirm)="onEditConfirm($event)">
+    </ng2-smart-table>
+  </nb-card-body>
+</nb-card>
+
+
+
+
+
Index: src/app/pages/documents-admin/medicolegal/medicolegal.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/medicolegal/medicolegal.component.ts	(date 1582646278599)
+++ src/app/pages/documents-admin/medicolegal/medicolegal.component.ts	(date 1582646278599)
@@ -0,0 +1,134 @@
+import { Component, OnInit } from '@angular/core';
+import {CertificatMedicoLegalService} from '../../../@core/backend/common/services/CertificatMedicoLegal.service';
+import {CertificatMedicoLegal} from '../../../@core/backend/common/model/CertificatMedicoLegal';
+import {LocalDataSource} from 'ng2-smart-table';
+import {UsersService} from '../../../@core/backend/common/services/users.service';
+import {DecedesService} from '../../../@core/backend/common/services/Decedes.service';
+import {MedecinsService} from '../../../@core/backend/common/services/Medecins.service';
+
+@Component({
+  selector: 'ngx-medicolegal',
+  templateUrl: './medicolegal.component.html',
+  styleUrls: ['./medicolegal.component.scss'],
+  providers: [ CertificatMedicoLegalService, UsersService, DecedesService, MedecinsService],
+})
+export class MedicolegalComponent implements OnInit {
+  Medicolegal: CertificatMedicoLegal = new CertificatMedicoLegal();
+NomMedecin = [];
+  NomDecede = [];
+  settings = {
+    add: {
+      addButtonContent: '<i class="nb-plus"></i>',
+      createButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmCreate: true,
+    },
+    edit: {
+      editButtonContent: '<i class="nb-edit"></i>',
+      saveButtonContent: '<i class="nb-checkmark"></i>',
+      cancelButtonContent: '<i class="nb-close"></i>',
+      confirmSave: true,
+      mode: 'inline',
+    },
+    delete: {
+      deleteButtonContent: '<i class="nb-trash"></i>',
+      confirmDelete: true,
+
+    },
+    columns: {
+      medcin: {
+        title: 'Médcin',
+        type: 'Medecins',
+      },
+      declarant: {
+        title: 'Déclarant',
+        type: 'string',
+      },
+      adress: {
+        title: 'Adresse',
+        type: 'string',
+      },
+      CIN: {
+        title: 'CIN',
+        type: 'string',
+      },
+      declaration: {
+        title: 'Date de déclaration',
+        type: 'Date',
+      },
+      defunt: {
+        title: 'defunt',
+        type: 'Decedes',
+      },
+    },
+  };
+  private source: CertificatMedicoLegal;
+
+  constructor(private service: CertificatMedicoLegalService, private userservice: UsersService,
+  private serviceDecede: DecedesService, private serviceMeddcin: MedecinsService) {
+    this.serviceDecede.getAll().subscribe( dataa => {
+      dataa.forEach ( obj => { this.NomDecede.push(obj.nom); });
+    });
+    this.serviceMeddcin.getAll().subscribe( dataa => {
+      dataa.forEach ( obj => { this.NomMedecin.push(obj.nom); });
+    });
+  }
+  init() {
+    this.service.getAll().subscribe(data => {
+    this.source = data;
+  });
+  }
+
+  ngOnInit() {
+    this.userservice.getCurrentUser().subscribe(data => {
+      console.log(data);
+      console.log(data.role);
+    });
+    this.init();
+  }
+
+  MedNom: string;
+  save() {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      this.serviceMeddcin.getByNom(this.MedNom).subscribe(obj => {
+        this.Medicolegal.medecin = obj;
+      });
+      this.service.create(this.Medicolegal).subscribe(obj => {});
+      this.reset();
+      window.alert('Les données ont été ajoutées avec succès à la base de données');
+    });
+  }
+
+  private reset() {
+    this.Medicolegal = new CertificatMedicoLegal();
+  }
+
+  createConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      event.confirm.resolve(event.newData);
+      this.service.create(event.newData).subscribe(obj => {});
+      // this.init();
+    });
+  }
+
+  onEditConfirm(event) {
+    this.service.getAll().subscribe(data => {
+      console.log(data);
+      event.confirm.resolve(event.newData);
+      this.service.update(event.newData).subscribe(obj => {
+      });
+      window.alert('les donnes sont change avec succes');
+    });
+  }
+  onDeleteConfirm(event) {
+    if (window.confirm('Are you sure you want to delete?')) {
+      event.confirm.resolve(event.data);
+      this.service.delete(event.data.id).subscribe(data => {
+        console.log(data);
+      });
+    } else {
+      event.confirm.reject(event.data);
+    }
+  }
+}
Index: src/app/pages/documents-admin/attestation/attestation.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/attestation/attestation.component.spec.ts	(date 1582038437178)
+++ src/app/pages/documents-admin/attestation/attestation.component.spec.ts	(date 1582038437178)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { AttestationComponent } from './attestation.component';
+
+describe('AttestationComponent', () => {
+  let component: AttestationComponent;
+  let fixture: ComponentFixture<AttestationComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ AttestationComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(AttestationComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/documents-admin/attestation/attestation.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/attestation/attestation.component.scss	(date 1582038437178)
+++ src/app/pages/documents-admin/attestation/attestation.component.scss	(date 1582038437178)
@@ -0,0 +1,0 @@
Index: src/app/pages/documents-admin/attestation/attestation.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/attestation/attestation.component.html	(date 1582215377637)
+++ src/app/pages/documents-admin/attestation/attestation.component.html	(date 1582215377637)
@@ -0,0 +1,1 @@
+<ngx-decedes></ngx-decedes>
Index: src/app/pages/documents-admin/attestation/attestation.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/attestation/attestation.component.ts	(date 1582107444010)
+++ src/app/pages/documents-admin/attestation/attestation.component.ts	(date 1582107444010)
@@ -0,0 +1,15 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-attestation',
+  templateUrl: './attestation.component.html',
+  styleUrls: ['./attestation.component.scss'],
+})
+export class AttestationComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/pages/statistiques/pivot/pivot.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/pivot/pivot.component.ts	(date 1582038876772)
+++ src/app/pages/statistiques/pivot/pivot.component.ts	(date 1582038876772)
@@ -0,0 +1,15 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-pivot',
+  templateUrl: './pivot.component.html',
+  styleUrls: ['./pivot.component.scss']
+})
+export class PivotComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/pages/documents-admin/documents-admin-routing.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/documents-admin-routing.module.ts	(date 1582068411203)
+++ src/app/pages/documents-admin/documents-admin-routing.module.ts	(date 1582068411203)
@@ -0,0 +1,33 @@
+import { NgModule } from '@angular/core';
+import { Routes, RouterModule } from '@angular/router';
+import {BulletinsDMComponent} from '../bulletins-dm/bulletins-dm.component';
+import {MedicolegalComponent} from './medicolegal/medicolegal.component';
+import {ConstationComponent} from './constation/constation.component';
+import {AttestationComponent} from './attestation/attestation.component';
+import {DocumentsAdminComponent} from './documents-admin.component';
+
+
+const routes: Routes = [{
+  path: '',
+  component: DocumentsAdminComponent,
+  children: [
+    {
+      path: 'medicolegal',
+      component: MedicolegalComponent,
+    },
+    {
+      path: 'constation',
+      component: ConstationComponent,
+    },
+    {
+      path: 'attestation',
+      component: AttestationComponent,
+    },
+  ],
+}];
+
+@NgModule({
+  imports: [RouterModule.forChild(routes)],
+  exports: [RouterModule],
+})
+export class DocumentsAdminRoutingModule { }
Index: src/app/pages/documents-admin/documents-admin.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/documents-admin.component.ts	(date 1582039669755)
+++ src/app/pages/documents-admin/documents-admin.component.ts	(date 1582039669755)
@@ -0,0 +1,13 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-documents-admin',
+  template: `<router-outlet></router-outlet>`})
+export class DocumentsAdminComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/@theme/components/footer/footer.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/@theme/components/footer/footer.component.ts	(revision cffe591a347345fd40ac9664e38c68aaf68ff20c)
+++ src/app/@theme/components/footer/footer.component.ts	(date 1582200439286)
@@ -10,14 +10,14 @@
   selector: 'ngx-footer',
   styleUrls: ['./footer.component.scss'],
   template: `
-    <span class="created-by">Created with ♥ by <b>
-      <a href="https://akveo.com" target="_blank">Akveo</a></b> {{ currentYear }}</span>
-    <div class="socials">
-      <a href="#" target="_blank" class="ion ion-social-github"></a>
-      <a href="#" target="_blank" class="ion ion-social-facebook"></a>
-      <a href="#" target="_blank" class="ion ion-social-twitter"></a>
-      <a href="#" target="_blank" class="ion ion-social-linkedin"></a>
-    </div>
+<!--    <span class="created-by">Created with ♥ by <b>-->
+<!--      <a href="https://akveo.com" target="_blank">Akveo</a></b> {{ currentYear }}</span>-->
+<!--    <div class="socials">-->
+<!--      <a href="#" target="_blank" class="ion ion-social-github"></a>-->
+<!--      <a href="#" target="_blank" class="ion ion-social-facebook"></a>-->
+<!--      <a href="#" target="_blank" class="ion ion-social-twitter"></a>-->
+<!--      <a href="#" target="_blank" class="ion ion-social-linkedin"></a>-->
+<!--    </div>-->
   `,
 })
 export class FooterComponent {
Index: src/app/pages/documents-admin/documents-admin.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/documents-admin.module.ts	(date 1582215287130)
+++ src/app/pages/documents-admin/documents-admin.module.ts	(date 1582215287130)
@@ -0,0 +1,27 @@
+import { NgModule } from '@angular/core';
+import { CommonModule } from '@angular/common';
+
+import { DocumentsAdminRoutingModule } from './documents-admin-routing.module';
+import { MedicolegalComponent } from './medicolegal/medicolegal.component';
+import { ConstationComponent } from './constation/constation.component';
+import { AttestationComponent } from './attestation/attestation.component';
+import {DocumentsAdminComponent} from './documents-admin.component';
+import {NbCardModule, NbSelectModule} from "@nebular/theme";
+import {FormsModule} from "@angular/forms";
+import {Ng2SmartTableModule} from "ng2-smart-table";
+import {BulletinsDMModule} from "../bulletins-dm/bulletins-dm.module";
+
+
+@NgModule({
+  declarations: [DocumentsAdminComponent, MedicolegalComponent, ConstationComponent, AttestationComponent],
+  imports: [
+    CommonModule,
+    DocumentsAdminRoutingModule,
+    NbCardModule,
+    NbSelectModule,
+    FormsModule,
+    Ng2SmartTableModule,
+    BulletinsDMModule
+  ],
+})
+export class DocumentsAdminModule { }
Index: src/app/pages/documents-admin/medicolegal/medicolegal.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/medicolegal/medicolegal.component.spec.ts	(date 1582038389275)
+++ src/app/pages/documents-admin/medicolegal/medicolegal.component.spec.ts	(date 1582038389275)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { MedicolegalComponent } from './medicolegal.component';
+
+describe('MedicolegalComponent', () => {
+  let component: MedicolegalComponent;
+  let fixture: ComponentFixture<MedicolegalComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ MedicolegalComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(MedicolegalComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/documents-admin/medicolegal/medicolegal.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/documents-admin/medicolegal/medicolegal.component.scss	(date 1582038389275)
+++ src/app/pages/documents-admin/medicolegal/medicolegal.component.scss	(date 1582038389275)
@@ -0,0 +1,0 @@
Index: src/app/pages/statistiques/region/region.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/region/region.component.spec.ts	(date 1582038958575)
+++ src/app/pages/statistiques/region/region.component.spec.ts	(date 1582038958575)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { RegionComponent } from './region.component';
+
+describe('RegionComponent', () => {
+  let component: RegionComponent;
+  let fixture: ComponentFixture<RegionComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ RegionComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(RegionComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/statistiques/region/region.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/region/region.component.scss	(date 1582038958590)
+++ src/app/pages/statistiques/region/region.component.scss	(date 1582038958590)
@@ -0,0 +1,0 @@
Index: src/app/pages/statistiques/region/region.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/region/region.component.html	(date 1582038958575)
+++ src/app/pages/statistiques/region/region.component.html	(date 1582038958575)
@@ -0,0 +1,1 @@
+<p>region works!</p>
Index: src/app/pages/statistiques/region/region.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/region/region.component.ts	(date 1582038958575)
+++ src/app/pages/statistiques/region/region.component.ts	(date 1582038958575)
@@ -0,0 +1,15 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-region',
+  templateUrl: './region.component.html',
+  styleUrls: ['./region.component.scss']
+})
+export class RegionComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/pages/statistiques/pivot/pivot.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/pivot/pivot.component.spec.ts	(date 1582038876772)
+++ src/app/pages/statistiques/pivot/pivot.component.spec.ts	(date 1582038876772)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { PivotComponent } from './pivot.component';
+
+describe('PivotComponent', () => {
+  let component: PivotComponent;
+  let fixture: ComponentFixture<PivotComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ PivotComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(PivotComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/statistiques/pivot/pivot.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/pivot/pivot.component.scss	(date 1582038876772)
+++ src/app/pages/statistiques/pivot/pivot.component.scss	(date 1582038876772)
@@ -0,0 +1,0 @@
Index: src/app/pages/statistiques/pivot/pivot.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/pivot/pivot.component.html	(date 1582038876772)
+++ src/app/pages/statistiques/pivot/pivot.component.html	(date 1582038876772)
@@ -0,0 +1,1 @@
+<p>pivot works!</p>
Index: src/app/pages/statistiques/sexe-deces/sexe-deces.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/sexe-deces/sexe-deces.component.spec.ts	(date 1582038915816)
+++ src/app/pages/statistiques/sexe-deces/sexe-deces.component.spec.ts	(date 1582038915816)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { SexeDecesComponent } from './sexe-deces.component';
+
+describe('SexeDecesComponent', () => {
+  let component: SexeDecesComponent;
+  let fixture: ComponentFixture<SexeDecesComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ SexeDecesComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(SexeDecesComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/statistiques/sexe-deces/sexe-deces.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/sexe-deces/sexe-deces.component.scss	(date 1582038915816)
+++ src/app/pages/statistiques/sexe-deces/sexe-deces.component.scss	(date 1582038915816)
@@ -0,0 +1,0 @@
Index: src/app/pages/statistiques/sexe-deces/sexe-deces.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/sexe-deces/sexe-deces.component.html	(date 1582623970867)
+++ src/app/pages/statistiques/sexe-deces/sexe-deces.component.html	(date 1582623970867)
@@ -0,0 +1,33 @@
+<nb-card>
+  <nb-card-header>
+    <div class="row">
+      <div class="col-sm-6">Statistique sur la mrtalité des femmes et des hommes</div>
+      <div class="col-sm-6">
+        <button style="margin-top: 29px; width: 70px;" (click)="searchFor()" class="btn btn-primary float-right">
+          <i class="fa fa-chart-bar"></i>
+        </button>
+      </div>
+    </div>
+  </nb-card-header>
+
+  <nb-card-body>
+
+    <div class="row">
+      <div class="col-sm-3">
+        <label class="label" for="chart">Type de graphique</label>
+        <select [(ngModel)]="stackedChart.typeChart" id="chart" class="form-control float-left md" fullWidth>
+          <option *ngFor="let type of chartType" [ngValue]="type.type">{{ type.name }}</option>
+        </select></div>
+    </div>
+    <google-chart
+      [title]="stackedChart.title"
+      [type]="stackedChart.typeChart"
+      [data]="stackedChart.data"
+      [columnNames]="stackedChart.columnNames"
+      [options]="stackedChart.options"
+      [width]="stackedChart.width"
+      [height]="stackedChart.height">
+    </google-chart>
+
+  </nb-card-body>
+</nb-card>
Index: src/app/pages/statistiques/sexe-deces/sexe-deces.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/sexe-deces/sexe-deces.component.ts	(date 1582624638906)
+++ src/app/pages/statistiques/sexe-deces/sexe-deces.component.ts	(date 1582624638906)
@@ -0,0 +1,37 @@
+import { Component, OnInit } from '@angular/core';
+import {DecedesService} from '../../../@core/backend/common/services/Decedes.service';
+import {UsersService} from '../../../@core/backend/common/services/users.service';
+import {Decedes} from '../../../@core/backend/common/model/Decedes';
+
+@Component({
+  selector: 'ngx-sexe-deces',
+  templateUrl: './sexe-deces.component.html',
+  styleUrls: ['./sexe-deces.component.scss'],
+  providers: [DecedesService, UsersService],
+})
+export class SexeDecesComponent implements OnInit {
+Decede: Decedes = new Decedes();
+  constructor(private service: DecedesService ) {}
+  stackedChart = {
+    title: 'la mrtalité des femmes et des hommes',
+    typeChart: 'AreaChart',
+    columnNames: ['Femme', 'Homme' , 'Indéfini'],
+    options : {
+      hAxis: {
+        title: ''},
+      vAxis: {title: ''},
+    },
+    width : 1000,
+    height : 200,
+    data : [[0, 0 , 0]],
+  };
+  chartType =  [{type : 'LineChart', name : 'Line'}, {type : 'AreaChart', name : 'Area '},
+    {type : 'BarChart' , name : 'Bar'},
+    {type : 'ColumnChart' , name : 'Column'} ] ;
+
+  ngOnInit() {
+  }
+
+  searchFor() {
+  }
+}
Index: src/app/pages/statistiques/nature-deces/nature-deces.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/nature-deces/nature-deces.component.spec.ts	(date 1582038859133)
+++ src/app/pages/statistiques/nature-deces/nature-deces.component.spec.ts	(date 1582038859133)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { NatureDecesComponent } from './nature-deces.component';
+
+describe('NatureDecesComponent', () => {
+  let component: NatureDecesComponent;
+  let fixture: ComponentFixture<NatureDecesComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ NatureDecesComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(NatureDecesComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/statistiques/nature-deces/nature-deces.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/nature-deces/nature-deces.component.scss	(date 1582038859133)
+++ src/app/pages/statistiques/nature-deces/nature-deces.component.scss	(date 1582038859133)
@@ -0,0 +1,0 @@
Index: src/app/pages/statistiques/nature-deces/nature-deces.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/nature-deces/nature-deces.component.html	(date 1582038859133)
+++ src/app/pages/statistiques/nature-deces/nature-deces.component.html	(date 1582038859133)
@@ -0,0 +1,1 @@
+<p>nature-deces works!</p>
Index: src/app/pages/statistiques/nature-deces/nature-deces.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/nature-deces/nature-deces.component.ts	(date 1582038859133)
+++ src/app/pages/statistiques/nature-deces/nature-deces.component.ts	(date 1582038859133)
@@ -0,0 +1,15 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-nature-deces',
+  templateUrl: './nature-deces.component.html',
+  styleUrls: ['./nature-deces.component.scss']
+})
+export class NatureDecesComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/pages/statistiques/deces-enfants/deces-enfants.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/deces-enfants/deces-enfants.component.scss	(date 1582038822245)
+++ src/app/pages/statistiques/deces-enfants/deces-enfants.component.scss	(date 1582038822245)
@@ -0,0 +1,0 @@
Index: src/app/pages/statistiques/deces-enfants/deces-enfants.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/deces-enfants/deces-enfants.component.html	(date 1582038822245)
+++ src/app/pages/statistiques/deces-enfants/deces-enfants.component.html	(date 1582038822245)
@@ -0,0 +1,1 @@
+<p>deces-enfants works!</p>
Index: src/app/pages/statistiques/deces-enfants/deces-enfants.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/deces-enfants/deces-enfants.component.ts	(date 1582038822245)
+++ src/app/pages/statistiques/deces-enfants/deces-enfants.component.ts	(date 1582038822245)
@@ -0,0 +1,15 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-deces-enfants',
+  templateUrl: './deces-enfants.component.html',
+  styleUrls: ['./deces-enfants.component.scss']
+})
+export class DecesEnfantsComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.spec.ts	(date 1582038759532)
+++ src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.spec.ts	(date 1582038759532)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { NouveauxNesComponent } from './nouveaux-nes.component';
+
+describe('NouveauxNesComponent', () => {
+  let component: NouveauxNesComponent;
+  let fixture: ComponentFixture<NouveauxNesComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ NouveauxNesComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(NouveauxNesComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.scss	(date 1582038759548)
+++ src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.scss	(date 1582038759548)
@@ -0,0 +1,0 @@
Index: src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.html	(date 1582038759532)
+++ src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.html	(date 1582038759532)
@@ -0,0 +1,1 @@
+<p>nouveaux-nes works!</p>
Index: src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.ts	(date 1582108466527)
+++ src/app/pages/statistiques/nouveaux-nes/nouveaux-nes.component.ts	(date 1582108466527)
@@ -0,0 +1,15 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-nouveaux-nes',
+  templateUrl: './nouveaux-nes.component.html',
+  styleUrls: ['./nouveaux-nes.component.scss'],
+})
+export class NouveauxNesComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/pages/rapport/rapport.component.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/rapport/rapport.component.html	(date 1582041970883)
+++ src/app/pages/rapport/rapport.component.html	(date 1582041970883)
@@ -0,0 +1,1 @@
+<p>rapport works!</p>
Index: src/app/pages/rapport/rapport.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/rapport/rapport.component.ts	(date 1582039669817)
+++ src/app/pages/rapport/rapport.component.ts	(date 1582039669817)
@@ -0,0 +1,13 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-rapport',
+  template: `<router-outlet></router-outlet>`})
+export class RapportComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/pages/rapport/rapport.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/rapport/rapport.module.ts	(date 1582039065214)
+++ src/app/pages/rapport/rapport.module.ts	(date 1582039065214)
@@ -0,0 +1,15 @@
+import { NgModule } from '@angular/core';
+import { CommonModule } from '@angular/common';
+
+import { RapportRoutingModule } from './rapport-routing.module';
+import { RapportComponent } from './rapport.component';
+
+
+@NgModule({
+  declarations: [RapportComponent],
+  imports: [
+    CommonModule,
+    RapportRoutingModule
+  ]
+})
+export class RapportModule { }
Index: src/app/pages/statistiques/statistiques-routing.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/statistiques-routing.module.ts	(date 1582108590852)
+++ src/app/pages/statistiques/statistiques-routing.module.ts	(date 1582108590852)
@@ -0,0 +1,52 @@
+import { NgModule } from '@angular/core';
+import { Routes, RouterModule } from '@angular/router';
+import {StatistiquesComponent} from './statistiques.component';
+import {NouveauxNesComponent} from './nouveaux-nes/nouveaux-nes.component';
+import {DecesEnfantsComponent} from './deces-enfants/deces-enfants.component';
+import {NatureDecesComponent} from './nature-deces/nature-deces.component';
+import {PivotComponent} from './pivot/pivot.component';
+import {SexeDecesComponent} from './sexe-deces/sexe-deces.component';
+import {RegionComponent} from './region/region.component';
+import {SelonCauseComponent} from './selon-cause/selon-cause.component';
+
+
+const routes: Routes = [{
+  path: '',
+  component: StatistiquesComponent,
+  children: [
+    {
+      path: 'NouveauxNes',
+      component: NouveauxNesComponent,
+    },
+    {
+      path: 'DecesEnfants',
+      component: DecesEnfantsComponent,
+    },
+    {
+      path: 'NatureDeces',
+      component: NatureDecesComponent,
+    },
+    {
+      path: 'pivot',
+      component: PivotComponent,
+    },
+    {
+      path: 'seloncausesDeces',
+      component: SelonCauseComponent,
+    },
+    {
+      path: 'sexeDeces',
+      component: SexeDecesComponent,
+    },
+    {
+      path: 'region',
+      component: RegionComponent,
+    },
+  ],
+}];
+
+@NgModule({
+  imports: [RouterModule.forChild(routes)],
+  exports: [RouterModule],
+})
+export class StatistiquesRoutingModule { }
Index: src/app/pages/statistiques/statistiques.component.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/statistiques.component.ts	(date 1582039669614)
+++ src/app/pages/statistiques/statistiques.component.ts	(date 1582039669614)
@@ -0,0 +1,13 @@
+import { Component, OnInit } from '@angular/core';
+
+@Component({
+  selector: 'ngx-statistiques',
+  template: `<router-outlet></router-outlet>`})
+export class StatistiquesComponent implements OnInit {
+
+  constructor() { }
+
+  ngOnInit() {
+  }
+
+}
Index: src/app/pages/statistiques/statistiques.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/statistiques.module.ts	(date 1582623970899)
+++ src/app/pages/statistiques/statistiques.module.ts	(date 1582623970899)
@@ -0,0 +1,30 @@
+import { NgModule } from '@angular/core';
+import { CommonModule } from '@angular/common';
+
+import { StatistiquesRoutingModule } from './statistiques-routing.module';
+import { StatistiquesComponent } from '../statistiques/statistiques.component';
+import { NouveauxNesComponent } from './nouveaux-nes/nouveaux-nes.component';
+import { DecesEnfantsComponent } from './deces-enfants/deces-enfants.component';
+import { NatureDecesComponent } from './nature-deces/nature-deces.component';
+import { PivotComponent } from './pivot/pivot.component';
+import { SexeDecesComponent } from './sexe-deces/sexe-deces.component';
+import { RegionComponent } from './region/region.component';
+import { SelonCauseComponent } from './selon-cause/selon-cause.component';
+import {NbCardModule} from "@nebular/theme";
+import {FormsModule} from "@angular/forms";
+
+
+@NgModule({
+  declarations: [StatistiquesComponent,
+    NouveauxNesComponent,
+    DecesEnfantsComponent,
+    NatureDecesComponent,
+    PivotComponent, SexeDecesComponent, RegionComponent, SelonCauseComponent],
+  imports: [
+    CommonModule,
+    StatistiquesRoutingModule,
+    NbCardModule,
+    FormsModule,
+  ],
+})
+export class StatistiquesModule { }
Index: src/app/pages/statistiques/deces-enfants/deces-enfants.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/statistiques/deces-enfants/deces-enfants.component.spec.ts	(date 1582038822245)
+++ src/app/pages/statistiques/deces-enfants/deces-enfants.component.spec.ts	(date 1582038822245)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { DecesEnfantsComponent } from './deces-enfants.component';
+
+describe('DecesEnfantsComponent', () => {
+  let component: DecesEnfantsComponent;
+  let fixture: ComponentFixture<DecesEnfantsComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ DecesEnfantsComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(DecesEnfantsComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/pages-routing.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/pages-routing.module.ts	(revision cffe591a347345fd40ac9664e38c68aaf68ff20c)
+++ src/app/pages/pages-routing.module.ts	(date 1582278186982)
@@ -25,24 +25,29 @@
       component: DashboardComponent,
     },
     {
-      path: 'users',
-      loadChildren: () => import('./users/users.module')
-        .then(m => m.UsersModule),
+      path: 'bulletins-dm',
+      loadChildren: () => import('./bulletins-dm/bulletins-dm.module')
+        .then(m => m.BulletinsDMModule),
+    },
+    {
+      path: 'certificats',
+      loadChildren: () => import('./certificat/certificat.module')
+        .then(m => m.CertificatModule),
     },
     {
-      path: 'layout',
-      loadChildren: () => import('./layout/layout.module')
-        .then(m => m.LayoutModule),
+      path: 'documents-admin',
+      loadChildren: () => import('./documents-admin/documents-admin.module')
+        .then(m => m.DocumentsAdminModule),
     },
     {
-      path: 'forms',
-      loadChildren: () => import('./forms/forms.module')
-        .then(m => m.FormsModule),
+      path: 'rapport',
+      loadChildren: () => import('./rapport/rapport.module')
+        .then(m => m.RapportModule),
     },
     {
-      path: 'ui-features',
-      loadChildren: () => import('./ui-features/ui-features.module')
-        .then(m => m.UiFeaturesModule),
+      path: 'statistiques',
+      loadChildren: () => import('./statistiques/statistiques.module')
+        .then(m => m.StatistiquesModule),
     },
     {
       path: 'modal-overlays',
Index: src/app/pages/pages-menu.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/pages-menu.ts	(revision cffe591a347345fd40ac9664e38c68aaf68ff20c)
+++ src/app/pages/pages-menu.ts	(date 1582278686689)
@@ -3,10 +3,9 @@
  * Licensed under the Single Application / Multi Application License.
  * See LICENSE_SINGLE_APP / LICENSE_MULTI_APP in the 'docs' folder for license information on type of purchased license.
  */
-
-import { NbMenuItem } from '@nebular/theme';
-import { Observable, of } from 'rxjs';
-import { Injectable } from '@angular/core';
+import {NbMenuItem} from '@nebular/theme';
+import {Observable, of} from 'rxjs';
+import {Injectable} from '@angular/core';
 
 @Injectable()
 export class PagesMenu {
@@ -14,13 +13,6 @@
   getMenu(): Observable<NbMenuItem[]> {
     const dashboardMenu = [
       {
-        title: 'E-commerce',
-        icon: 'shopping-cart-outline',
-        link: '/pages/dashboard',
-        home: true,
-        children: undefined,
-      },
-      {
         title: 'IoT Dashboard',
         icon: 'home-outline',
         link: '/pages/iot-dashboard',
@@ -30,218 +22,108 @@
 
     const menu = [
       {
-        title: 'FEATURES',
+        title: '',
         group: true,
       },
       {
-        title: 'Layout',
-        icon: 'layout-outline',
-        children: [
-          {
-            title: 'Stepper',
-            link: '/pages/layout/stepper',
-          },
-          {
-            title: 'List',
-            link: '/pages/layout/list',
-          },
-          {
-            title: 'Infinite List',
-            link: '/pages/layout/infinite-list',
-          },
-          {
-            title: 'Accordion',
-            link: '/pages/layout/accordion',
-          },
-          {
-            title: 'Tabs',
-            pathMatch: 'prefix',
-            link: '/pages/layout/tabs',
-          },
-        ],
-      },
-      {
-        title: 'Forms',
-        icon: 'edit-2-outline',
-        children: [
-          {
-            title: 'Form Inputs',
-            link: '/pages/forms/inputs',
-          },
-          {
-            title: 'Form Layouts',
-            link: '/pages/forms/layouts',
-          },
-          {
-            title: 'Buttons',
-            link: '/pages/forms/buttons',
-          },
-          {
-            title: 'Datepicker',
-            link: '/pages/forms/datepicker',
-          },
-        ],
-      },
-      {
-        title: 'UI Features',
-        icon: 'keypad-outline',
-        link: '/pages/ui-features',
-        children: [
-          {
-            title: 'Grid',
-            link: '/pages/ui-features/grid',
-          },
-          {
-            title: 'Icons',
-            link: '/pages/ui-features/icons',
-          },
-          {
-            title: 'Typography',
-            link: '/pages/ui-features/typography',
-          },
-          {
-            title: 'Animated Searches',
-            link: '/pages/ui-features/search-fields',
-          },
-        ],
-      },
-      {
-        title: 'Modal & Overlays',
-        icon: 'browser-outline',
+        title: 'Bulletin de décès et de mortinalité',
         children: [
           {
-            title: 'Dialog',
-            link: '/pages/modal-overlays/dialog',
-          },
-          {
-            title: 'Window',
-            link: '/pages/modal-overlays/window',
+            title: 'Bulletins',
+            link: '/pages/bulletins-dm/Bulletins',
           },
           {
-            title: 'Popover',
-            link: '/pages/modal-overlays/popover',
+            title: 'Décèdes',
+            link: '/pages/bulletins-dm/decedes',
           },
           {
-            title: 'Toastr',
-            link: '/pages/modal-overlays/toastr',
+            title: 'Cause de décès',
+            link: '/pages/bulletins-dm/cause-deces',
           },
           {
-            title: 'Tooltip',
-            link: '/pages/modal-overlays/tooltip',
+            title: 'Médcins',
+            link: '/pages/bulletins-dm/medcins',
           },
         ],
       },
       {
-        title: 'Extra Components',
-        icon: 'message-circle-outline',
+        title: 'Documents administrative',
         children: [
           {
-            title: 'Calendar',
-            link: '/pages/extra-components/calendar',
-          },
-          {
-            title: 'Progress Bar',
-            link: '/pages/extra-components/progress-bar',
-          },
-          {
-            title: 'Spinner',
-            link: '/pages/extra-components/spinner',
+            title: 'certificat médico-légal',
+            link: '/pages/documents-admin/medicolegal',
           },
           {
-            title: 'Alert',
-            link: '/pages/extra-components/alert',
+            title: 'certificat de constation',
+            link: '/pages/documents-admin/constation',
           },
           {
-            title: 'Calendar Kit',
-            link: '/pages/extra-components/calendar-kit',
-          },
-          {
-            title: 'Chat',
-            link: '/pages/extra-components/chat',
+            title: 'Attestation de Décès',
+            link: '/pages/documents-admin/attestation',
           },
         ],
       },
       {
-        title: 'Maps',
-        icon: 'map-outline',
+        title: 'Certificats',
         children: [
           {
-            title: 'Google Maps',
-            link: '/pages/maps/gmaps',
-          },
-          {
-            title: 'Leaflet Maps',
-            link: '/pages/maps/leaflet',
+            title: 'certificat du transfert du corps',
+            link: '/pages/certificats/transfertCorps',
           },
           {
-            title: 'Bubble Maps',
-            link: '/pages/maps/bubble',
+            title: 'Aperçu du corps',
+            link: '/pages/certificats/ApercuDuCorp',
           },
           {
-            title: 'Search Maps',
-            link: '/pages/maps/searchmap',
+            title: 'certificat Enterrement',
+            link: '/pages/certificats/enterrement',
           },
         ],
       },
       {
-        title: 'Charts',
-        icon: 'pie-chart-outline',
+        title: 'statistiques',
         children: [
           {
-            title: 'Echarts',
-            link: '/pages/charts/echarts',
+            title: 'Décès des nouveaux nés',
+            link: '/pages/statistiques/NouveauxNes',
+          },
+          {
+            title: 'Décès des enfants leurs ages de 1j à 30j',
+            link: '/pages/statistiques/DecesEnfants',
+          },
+          {
+            title: 'Selon la nature de décès',
+            link: '/pages/statistiques/NatureDeces',
+          },
+          {
+            title: 'Selon la nature de décès(pivot) ',
+            link: '/pages/statistiques/pivot',
+          },
+          {
+            title: 'Selon les causes de décès',
+            link: '/pages/statistiques/seloncausesDeces',
           },
           {
-            title: 'Charts.js',
-            link: '/pages/charts/chartjs',
+            title: 'Selon le sexe de décèdé ',
+            link: '/pages/statistiques/sexeDeces',
           },
           {
-            title: 'D3',
-            link: '/pages/charts/d3',
+            title: 'Selon la région',
+            link: '/pages/statistiques/region',
           },
         ],
       },
       {
-        title: 'Editors',
-        icon: 'text-outline',
+        title: 'Rapport',
         children: [
           {
-            title: 'TinyMCE',
-            link: '/pages/editors/tinymce',
-          },
-          {
-            title: 'CKEditor',
-            link: '/pages/editors/ckeditor',
-          },
-        ],
-      },
-      {
-        title: 'Tables & Data',
-        icon: 'grid-outline',
-        children: [
-          {
-            title: 'Smart Table',
-            link: '/pages/tables/smart-table',
-          },
-          {
-            title: 'Tree Grid',
-            link: '/pages/tables/tree-grid',
-          },
-        ],
-      },
-      {
-        title: 'Miscellaneous',
-        icon: 'shuffle-2-outline',
-        children: [
-          {
-            title: '404',
-            link: '/pages/miscellaneous/404',
+            title: 'My Dashboard',
+            link: '/pages/rapport/dashbord',
           },
         ],
       },
       {
         title: 'Auth',
-        icon: 'lock-outline',
         children: [
           {
             title: 'Login',
Index: src/app/pages/pages.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/pages.module.ts	(revision cffe591a347345fd40ac9664e38c68aaf68ff20c)
+++ src/app/pages/pages.module.ts	(date 1582278645537)
@@ -15,6 +15,12 @@
 import { ECommerceModule } from './e-commerce/e-commerce.module';
 import { NbMenuModule } from '@nebular/theme';
 import { AuthModule } from '../@auth/auth.module';
+import { BulletinsDMComponent } from './bulletins-dm/bulletins-dm.component';
+import { DecedesComponent } from './bulletins-dm/decedes/decedes.component';
+import { DocumentsAdminComponent } from './documents-admin/documents-admin.component';
+import {BulletinsDMModule} from './bulletins-dm/bulletins-dm.module';
+import {DocumentsAdminModule} from './documents-admin/documents-admin.module';
+import {CertificatModule} from './certificat/certificat.module';
 
 const PAGES_COMPONENTS = [
   PagesComponent,
@@ -25,6 +31,9 @@
     PagesRoutingModule,
     ThemeModule,
     DashboardModule,
+    BulletinsDMModule,
+    DocumentsAdminModule,
+    CertificatModule,
     ECommerceModule,
     NbMenuModule,
     MiscellaneousModule,
Index: src/app/pages/rapport/rapport.component.spec.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/rapport/rapport.component.spec.ts	(date 1582041970836)
+++ src/app/pages/rapport/rapport.component.spec.ts	(date 1582041970836)
@@ -0,0 +1,25 @@
+import { async, ComponentFixture, TestBed } from '@angular/core/testing';
+
+import { RapportComponent } from './rapport.component';
+
+describe('RapportComponent', () => {
+  let component: RapportComponent;
+  let fixture: ComponentFixture<RapportComponent>;
+
+  beforeEach(async(() => {
+    TestBed.configureTestingModule({
+      declarations: [ RapportComponent ]
+    })
+    .compileComponents();
+  }));
+
+  beforeEach(() => {
+    fixture = TestBed.createComponent(RapportComponent);
+    component = fixture.componentInstance;
+    fixture.detectChanges();
+  });
+
+  it('should create', () => {
+    expect(component).toBeTruthy();
+  });
+});
Index: src/app/pages/rapport/rapport-routing.module.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/rapport/rapport-routing.module.ts	(date 1582038976152)
+++ src/app/pages/rapport/rapport-routing.module.ts	(date 1582038976152)
@@ -0,0 +1,11 @@
+import { NgModule } from '@angular/core';
+import { Routes, RouterModule } from '@angular/router';
+
+
+const routes: Routes = [];
+
+@NgModule({
+  imports: [RouterModule.forChild(routes)],
+  exports: [RouterModule]
+})
+export class RapportRoutingModule { }
Index: src/app/pages/rapport/rapport.component.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/app/pages/rapport/rapport.component.scss	(date 1582041970874)
+++ src/app/pages/rapport/rapport.component.scss	(date 1582041970874)
@@ -0,0 +1,0 @@
